{"version":3,"sources":["graphics/math/Matrix4.ts","graphics/math/Vector4.ts","graphics/math/Vector3.ts","graphics/math/Plane.ts","graphics/math/utils.ts","graphics/projections/index.ts","graphics/projections/ParallelProjection.ts","graphics/projections/PerspectiveProjection.ts","graphics/geometry/Camera.ts","graphics/geometry/Color.ts","graphics/geometry/Triangle.ts","graphics/geometry/utils.ts","graphics/transformations/RPYT.ts","graphics/transformations/translation.ts","ui-components/data/availableValues.ts","ui-components/data/defaultValue.ts","ui-components/Parameters/Parameters.context.tsx","ui-components/Parameters/components/SettingsControll.tsx","ui-components/Parameters/components/TriangleEditor.tsx","ui-components/Parameters/utils.ts","ui-components/Parameters/Parameters.tsx","ui-components/useImage.ts","Render.ts","ui-components/utils.ts","ui-components/GraphicCanvas.tsx","App.tsx","reportWebVitals.ts","index.tsx","graphics/index.ts"],"names":["Matrix4","elements","x","y","value","this","Vector4","z","w","M","e","Vector3","index","det3","a","b","c","d","f","g","h","i","Plane","A","B","C","D","v","ro","p1","p2","p3","stToRad","st","Math","PI","ParallelProjection","name","directionV","camera","set","axis","_position","PerspectiveProjection","position","Axis","Camera","verticalAxis","horizontalAxis","viewportDistance","Color","r","transparent","buf","Infinity","other","copyFrom","map","toString","padStart","floor","random","Triangle","color","transform","TriangleCompiled","join","of","triangle","plane","WL","sign","generateBitmap","width","height","matrix","Array","j","RPYRotation","p","S1","sin","C1","cos","S2","C2","S3","C3","translation","perspectiveProjection","parallelProjection","PROJECTIONS","FOCALS","PIXEL_SIZES","AXIS","SIZES","code","defaultValue","updateTriangleSchema","addTriangleSchema","projection","windowSize","find","s","pixelSize","focal","depth","triangles","id","rotation","move","triangleId","ParametersContext","createContext","rand","min","max","round","ParametersContextProvider","children","useState","setDepth","setFocal","setAxis","setWindowSize","setPixelSize","setTriangles","setProjection","handleChangeProjection","useCallback","handleChangeWindowSize","sizeCode","handleChangeFocal","handleChangeDepth","handleChangePixelSize","pxSize","handleChangeAxis","ax","schema","ts","t","Provider","useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","small","select","background","SettingsControll","onChange","label","classes","handleChange","target","FormControl","variant","className","clsx","InputLabel","Select","colorPreview","boxShadow","shadows","borderRadius","shape","display","inputs","maxWidth","save","verticalAlign","TriangleEditor","useContext","setRotation","setMove","asVector3Array","pointA","setPointA","pointB","setPointB","pointC","setPointC","toRGBArray","setColor","style","backgroundColor","TextField","length","match","Button","onClick","_rotation","replaceAll","split","parseFloat","some","Number","isNaN","alert","_move","_color","hex","result","exec","parseInt","hexToRgb","_pointA","_pointB","_pointC","Parameters","proj","MenuItem","size","toFixed","toUpperCase","FormControlLabel","control","Switch","checked","Typography","gutterBottom","useImage","canvas","ctx","useRef","bitmap","useMemo","flatBitmap","useEffect","current","getContext","image","trianglesSchemas","img","depthByTransparency","notTransformed","compile","transformed","transformation","width2","height2","pxV","minDepth","maxDepth","distances","flatMap","k","sqrt","distanceTo2","directionVector","depthDiffrance","reset","testInside2d","d2","Render","putImageData","ImageData","data","i4w","j4i4w","Uint8ClampedArray","from","flatColors","overflow","settings","padding","breakpoints","up","GraphicCanvas","Container","Paper","elevation","ref","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ee505e3.chunk.js","sourcesContent":["export type Matrix4Index = 0 | 1 | 2 | 3\r\n\r\nexport type Matrix4AsArray = [\r\n  number, number, number, number, \r\n  number, number, number, number, \r\n  number, number, number, number, \r\n  number, number, number, number,\r\n]\r\n\r\n/**\r\n * 4x4 Matrix\r\n */\r\nexport class Matrix4 {\r\n\tconstructor(public elements: Matrix4AsArray) {}\r\n\r\n  /**\r\n   * M(x, y) = value\r\n   */\r\n  set(x: Matrix4Index, y: Matrix4Index, value: number): Matrix4 {\r\n    this.elements[y * 4 + x] = value\r\n\r\n    return this\r\n  }\r\n}\r\n","import { Matrix4 } from './Matrix4'\r\nimport { Vector3AsArray, Vector3Like } from './Vector3'\r\n\r\nexport class Vector4 implements Vector3Like {\r\n  x: number\r\n  y: number\r\n  z: number\r\n  w: number\r\n\r\n  constructor(x: number, y: number, z: number, w: number) {\r\n    this.x = x / w\r\n    this.y = y / w\r\n    this.z = z / w\r\n    this.w = w / w\r\n  }\r\n\r\n  /**\r\n   * w = 1, homogeneous coordinates\r\n   */\r\n  static of(x: number, y: number, z: number, w = 1): Vector4 {\r\n    return new Vector4(x, y, z, w)\r\n  }\r\n\r\n  transform(M: Matrix4): Vector4 {\r\n    const x = this.x\r\n    const y = this.y\r\n    const z = this.z\r\n    const w = this.w\r\n    const e = M.elements\r\n\r\n    return new Vector4(\r\n      e[0]  * x + e[1]  * y + e[2]  * z + e[3]  * w,\r\n      e[4]  * x + e[5]  * y + e[6]  * z + e[7]  * w,\r\n      e[8]  * x + e[9]  * y + e[10] * z + e[11] * w,\r\n      e[12] * x + e[13] * y + e[14] * z + e[15] * w\r\n    )\r\n  }\r\n\r\n  asVector3Array(): Vector3AsArray {\r\n    return [this.x, this.y, this.z]\r\n  }\r\n\r\n  toString(): string {\r\n    return `[${this.x}, ${this.y}, ${this.z}, ${this.w}]`\r\n  }\r\n}\r\n","export type Vector3Index = 0 | 1 | 2\r\nexport type Vector3AsArray = [number, number, number]\r\n\r\n/** Has x, y, z */\r\nexport interface Vector3Like {\r\n  x: number\r\n  y: number\r\n  z: number\r\n}\r\n\r\nexport class Vector3 implements Vector3Like {\r\n  constructor(public x: number, public y: number, public z: number) {}\r\n\r\n  set(index: Vector3Index, value: number): Vector3 {\r\n    if (index === 0) this.x = value\r\n    else if (index === 1) this.y = value\r\n    else this.z = value\r\n\r\n    return this\r\n  }\r\n\r\n  toString(): string {\r\n    return `[${this.x}, ${this.y}, ${this.z}]`\r\n  }\r\n}\r\n","import { Vector3Like } from './Vector3'\r\n\r\nfunction det3(\r\n  a: number, b: number, c: number,\r\n  d: number, e: number, f: number,\r\n  g: number, h: number, i: number,\r\n): number {\r\n  return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g\r\n}\r\n\r\nexport class Plane {\r\n  constructor(\r\n    public A: number,\r\n    public B: number,\r\n    public C: number,\r\n    public D: number\r\n  ) {}\r\n\r\n  static of(p1: Vector3Like, p2: Vector3Like, p3: Vector3Like): Plane {\r\n    return new Plane(\r\n      det3(\r\n        p1.y, p1.z, 1,\r\n        p2.y, p2.z, 1,\r\n        p3.y, p3.z, 1,\r\n      ),\r\n      -det3(\r\n        p1.x, p1.z, 1,\r\n        p2.x, p2.z, 1,\r\n        p3.x, p3.z, 1,\r\n      ),\r\n      det3(\r\n        p1.x, p1.y, 1,\r\n        p2.x, p2.y, 1,\r\n        p3.x, p3.y, 1,\r\n      ),\r\n      -det3(\r\n        p1.x, p1.y, p1.z,\r\n        p2.x, p2.y, p2.z,\r\n        p3.x, p3.y, p3.z,\r\n      )\r\n    )\r\n  }\r\n\r\n  /**\r\n   * The square of the distance\r\n   * @param v Position vector\r\n   * @param d Directional vector\r\n   */\r\n  distanceTo2(v: Vector3Like, d: Vector3Like) {\r\n    const ro =\r\n      (this.A * v.x + this.B * v.y + this.C * v.z + this.D) /\r\n      (this.A * d.x + this.B * d.y + this.C * d.z)\r\n\r\n    return (d.x * ro) ** 2 + (d.y * ro) ** 2 + (d.z * ro) ** 2\r\n  }\r\n}\r\n","/**\r\n * Zamiana stopni na radiany\r\n */\r\nexport function stToRad(st: number): number {\r\n  return (st * Math.PI) / 180\r\n}\r\n\r\n/**\r\n * Zamiana radianów na stopnie\r\n */\r\nexport function radToStr(rad: number): number {\r\n  return (rad / Math.PI) * 180\r\n}\r\n","export * from './Projection'\r\nexport * from './ParallelProjection'\r\nexport * from './PerspectiveProjection'\r\n","import { Camera } from '../geometry'\r\nimport { Vector3, Matrix4, Vector3Like } from '../math'\r\nimport { Projection } from './Projection'\r\n\r\nexport class ParallelProjection implements Projection {\r\n  readonly name = 'Równoległe'\r\n\r\n  private directionV = new Vector3(0, 0, 0)\r\n\r\n  /**\r\n   * Paraller transformation matrix\r\n   */\r\n  transformation(camera: Camera): Matrix4 {\r\n    return new Matrix4([\r\n      1, 0, 0, 0,\r\n      0, 1, 0, 0,\r\n      0, 0, 1, 0,\r\n      0, 0, 0, 1,\r\n    ]).set(camera.axis, camera.axis, 0)\r\n  }\r\n\r\n  /**\r\n   * Set axis on 1, other 0\r\n   */\r\n  directionVector(_position: Vector3Like, camera: Camera): Vector3 {\r\n    this.directionV.x = 0\r\n    this.directionV.y = 0\r\n    this.directionV.z = 0\r\n\r\n    return this.directionV.set(camera.axis, 1)\r\n  }\r\n}\r\n","import { Vector3, Matrix4, Vector3Like } from '../math'\r\nimport { Camera } from '../geometry'\r\nimport { Projection } from './Projection'\r\n\r\nexport class PerspectiveProjection implements Projection {\r\n  readonly name = 'Perspektywiczne'\r\n\r\n  private directionV = new Vector3(0, 0, 0)\r\n\r\n  /**\r\n   * Perspective transformation matrix\r\n   */\r\n  transformation(camera: Camera): Matrix4 {\r\n    return new Matrix4([\r\n      1, 0, 0, 0,\r\n      0, 1, 0, 0,\r\n      0, 0, 1, 0,\r\n      0, 0, 0, 0,\r\n    ])\r\n    .set(camera.axis, 3, 1 / camera.f)\r\n    // .set(camera.axis, camera.axis, 0)\r\n    // .set(camera.axis, 3, -1 / camera.f)\r\n  }\r\n\r\n  /**\r\n   * Reverses the direction and for the axis sets f\r\n   */\r\n  directionVector(position: Vector3Like, camera: Camera): Vector3 {\r\n    this.directionV.x = position.x\r\n    this.directionV.y = position.y\r\n    this.directionV.z = position.z\r\n\r\n    return this.directionV.set(camera.axis, camera.f)\r\n  }\r\n}\r\n","import { Matrix4 } from '../math'\r\n\r\nexport enum Axis {\r\n  x = 0,\r\n  y = 1,\r\n  z = 2,\r\n}\r\n\r\nexport class Camera {\r\n  readonly position = new Matrix4([\r\n    -1, 0, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 0, 1,\r\n  ])\r\n  \r\n  readonly verticalAxis: Axis\r\n  readonly horizontalAxis: Axis\r\n  readonly viewportDistance = 10\r\n\r\n  /**\r\n   * @param f focal\r\n   * @param axis viewport\r\n   */\r\n  constructor(public f: number, public axis: Axis) {\r\n    this.position.set(3, axis, -(this.viewportDistance - f))\r\n\r\n    this.verticalAxis = axis === Axis.z ? Axis.y : Axis.z\r\n    this.horizontalAxis = axis === Axis.x ? Axis.y : Axis.x\r\n  }\r\n}\r\n","export class Color {\r\n  static readonly transparent: Color = new Color(0, 0, 0, 0, 0)\r\n\r\n  static random(): Color {\r\n    return new Color(\r\n      Math.floor(Math.random() * 255),\r\n      Math.floor(Math.random() * 255),\r\n      Math.floor(Math.random() * 255),\r\n      255\r\n    )\r\n  }\r\n\r\n  constructor(\r\n    public r: number = Color.transparent.r,\r\n    public g: number = Color.transparent.g,\r\n    public b: number = Color.transparent.b,\r\n    public a: number = Color.transparent.a,\r\n    public buf: number = Infinity\r\n  ) {}\r\n\r\n  copyFrom(other: Color): void {\r\n    this.r = other.r\r\n    this.g = other.g\r\n    this.b = other.b\r\n    this.a = other.a\r\n  }\r\n\r\n  /**\r\n   * Reset to transparent\r\n   */\r\n  reset(): void {\r\n    this.copyFrom(Color.transparent)\r\n    this.buf = Infinity\r\n  }\r\n\r\n  toRGBArray(): string[] {\r\n    return [this.r, this.g, this.b].map((v) => v.toString(16).padStart(2, '0'))\r\n  }\r\n}\r\n","import { Color } from './Color'\r\nimport { Axis, Camera } from './Camera'\r\nimport { Vector3AsArray, Vector4, Matrix4, Plane, Vector3Like } from '../math'\r\n\r\nexport class Triangle {\r\n  static of(\r\n    p1: Vector3AsArray,\r\n    p2: Vector3AsArray,\r\n    p3: Vector3AsArray,\r\n    color = Color.random()\r\n  ): Triangle {\r\n    return new Triangle(\r\n      Vector4.of(...p1, 1),\r\n      Vector4.of(...p2, 1),\r\n      Vector4.of(...p3, 1),\r\n      color\r\n    )\r\n  }\r\n\r\n  constructor(\r\n    public p1: Vector4,\r\n    public p2: Vector4,\r\n    public p3: Vector4,\r\n    public color: Color\r\n  ) {}\r\n\r\n  /**\r\n   * T( M * T.P1,2,3 )\r\n   */\r\n  transform(M: Matrix4): Triangle {\r\n    return new Triangle(\r\n      this.p1.transform(M),\r\n      this.p2.transform(M),\r\n      this.p3.transform(M),\r\n      this.color\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Calculate extra properties eg plane\r\n   */\r\n  compile(camera: Camera): TriangleCompiled {\r\n    return new TriangleCompiled(this, camera)\r\n  }\r\n\r\n  toString() {\r\n    return [this.p1.toString(), this.p2.toString(), this.p3.toString()].join(\r\n      '\\n'\r\n    )\r\n  }\r\n}\r\n\r\nexport class TriangleCompiled {\r\n  readonly color: Color\r\n  readonly plane: Plane\r\n\r\n  /* testInside2d config */\r\n  private readonly A: Vector3AsArray\r\n  private readonly B: Vector3AsArray\r\n  private readonly C: Vector3AsArray\r\n  private readonly WL: Vector3AsArray\r\n\r\n  constructor(public readonly triangle: Triangle, private camera: Camera) {\r\n    this.color = triangle.color\r\n    this.plane = Plane.of(triangle.p1, triangle.p2, triangle.p3)\r\n\r\n    const { p1, p2, p3 } = triangle\r\n\r\n    /* testInside2d config */\r\n\r\n    /**\r\n     * Od tego na którą płaszczyznę rzutujemy zależy które kierunki który będziemy brać\r\n     */\r\n\r\n    const x =\r\n      camera.axis === Axis.x\r\n        ? ([p1.y, p2.y, p3.y] as const)\r\n        : ([p1.x, p2.x, p3.x] as const)\r\n    const y =\r\n      camera.axis === Axis.z\r\n        ? ([p1.y, p2.y, p3.y] as const)\r\n        : ([p1.z, p2.z, p3.z] as const)\r\n\r\n    this.A = [y[2] - y[1], y[2] - y[0], y[0] - y[1]]\r\n    this.B = [x[1] - x[2], x[0] - x[2], x[1] - x[0]]\r\n    this.C = [\r\n      y[1] * (x[2] - x[1]) - x[1] * (y[2] - y[1]),\r\n      y[0] * (x[2] - x[0]) - x[0] * (y[2] - y[0]),\r\n      y[1] * (x[0] - x[1]) - x[1] * (y[0] - y[1]),\r\n    ]\r\n\r\n    this.WL = [\r\n      Math.sign(this.A[0] * x[0] + this.B[0] * y[0] + this.C[0]),\r\n      Math.sign(this.A[1] * x[1] + this.B[1] * y[1] + this.C[1]),\r\n      Math.sign(this.A[2] * x[2] + this.B[2] * y[2] + this.C[2]),\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * @param v using only of x, y\r\n   */\r\n  testInside2d(v: Vector3Like): boolean {\r\n    const x = this.camera.axis === Axis.x ? v.y : v.x\r\n    const y = this.camera.axis === Axis.z ? v.y : v.z\r\n\r\n    return (\r\n      this.WL[0] * (this.A[0] * x + this.B[0] * y + this.C[0]) >= 0 &&\r\n      this.WL[1] * (this.A[1] * x + this.B[1] * y + this.C[1]) >= 0 &&\r\n      this.WL[2] * (this.A[2] * x + this.B[2] * y + this.C[2]) >= 0\r\n    )\r\n  }\r\n\r\n  toString() {\r\n    return this.triangle.toString()\r\n  }\r\n}\r\n","import { Color } from './Color'\r\n\r\nexport type Bitmap = Color[][]\r\n\r\nexport function generateBitmap(width: number, height: number): Bitmap {\r\n  const matrix = Array<Color[]>(height)\r\n\r\n  for (let i = 0; i < height; i++) {\r\n    matrix[i] = Array<Color>(width)\r\n\r\n    for (let j = 0; j < width; j++) {\r\n      matrix[i][j] = new Color()\r\n    }\r\n  }\r\n\r\n  return matrix\r\n}\r\n","import { Matrix4, stToRad } from '../math'\r\n\r\n/**\r\n * roll-pitch-yaw rotation\r\n *\r\n * @param r roll, Z axis\r\n * @param p pitch, Y axis, after roll\r\n * @param y yaw, X axis after pitch\r\n */\r\nexport function RPYRotation(r: number, p: number, y: number): Matrix4 {\r\n  r = stToRad(r)\r\n  p = stToRad(p)\r\n  y = stToRad(y)\r\n\r\n  const S1 = Math.sin(r)\r\n  const C1 = Math.cos(r)\r\n  const S2 = Math.sin(p)\r\n  const C2 = Math.cos(p)\r\n  const S3 = Math.sin(y)\r\n  const C3 = Math.cos(y)\r\n\r\n  /**\r\n   * Only for formatting\r\n   * \r\n    [\r\n      C1 * C2,   C1 * S2 * S3 - S1 * C3,  C1 * S2 * C3 + S1 * S3,  0,\r\n      S1 * C2,   S1 * S2 * S3 + C1 * C3,  S1 * S2 * C3 - C1 * S3,  0,\r\n      -S2,       C2 * S3,                 C2 * C3,                 0,\r\n      0,         0,                       0,                       1,\r\n    ]\r\n   */\r\n\r\n  return new Matrix4([\r\n    C1 * C2,   C1 * S2 * S3 - S1 * C3,  C1 * S2 * C3 + S1 * S3,  0,\r\n    S1 * C2,   S1 * S2 * S3 + C1 * C3,  S1 * S2 * C3 - C1 * S3,  0,\r\n    -S2,       C2 * S3,                 C2 * C3,                 0,\r\n    0,         0,                       0,                       1,\r\n  ])\r\n}\r\n","import { Matrix4 } from '../math'\r\n\r\n/**\r\n * Translation matrix\r\n */\r\nexport function translation(x: number, y: number, z: number): Matrix4 {\r\n  return new Matrix4([\r\n    1, 0, 0, x,\r\n    0, 1, 0, y,\r\n    0, 0, 1, z,\r\n    0, 0, 0, 1,\r\n  ])\r\n}\r\n","import {\r\n  Axis,\r\n  Projection,\r\n  ParallelProjection,\r\n  PerspectiveProjection,\r\n} from '../../graphics'\r\n\r\nexport interface Size {\r\n  width: number\r\n  height: number\r\n  code: string\r\n}\r\n\r\nexport const perspectiveProjection: Projection = new PerspectiveProjection()\r\nexport const parallelProjection: Projection = new ParallelProjection()\r\n\r\nexport const PROJECTIONS: Projection[] = [\r\n  perspectiveProjection,\r\n  parallelProjection,\r\n]\r\n\r\nexport const FOCALS: number[] = [\r\n  0.01,\r\n  0.05,\r\n  0.1,\r\n  0.25,\r\n  0.5,\r\n  0.75,\r\n  1,\r\n  1.25,\r\n  1.5,\r\n  1.75,\r\n  2,\r\n  3,\r\n  4,\r\n  5,\r\n  10,\r\n  20,\r\n  30,\r\n  50,\r\n  100,\r\n]\r\n\r\nexport const PIXEL_SIZES: number[] = [\r\n  0.001,\r\n  0.005,\r\n  0.01,\r\n  0.05,\r\n  0.1,\r\n  0.5,\r\n  1,\r\n  5,\r\n  10,\r\n  50,\r\n  100,\r\n]\r\n\r\nexport const AXIS: Axis[] = [Axis.x, Axis.y, Axis.z]\r\n\r\nexport const SIZES: Size[] = [\r\n  { width: 64, height: 64, code: '64x64' },\r\n  { width: 128, height: 128, code: '128x128' },\r\n  { width: 256, height: 256, code: '256x256' },\r\n  { width: 360, height: 360, code: '360x360' },\r\n  { width: 400, height: 400, code: '400x400' },\r\n  { width: 512, height: 512, code: '512x512' },\r\n  { width: 1024, height: 1024, code: '1024x1024' },\r\n]\r\n","import { Axis, Color, radToStr, Triangle, Vector3AsArray } from '../../graphics'\r\nimport { ParametersContextValue } from '../Parameters'\r\nimport { perspectiveProjection, SIZES } from './availableValues'\r\n\r\nexport const defaultValue: ParametersContextValue = {\r\n  updateTriangleSchema: () => {},\r\n  addTriangleSchema: () => {},\r\n  projection: perspectiveProjection,\r\n  windowSize: SIZES.find((s) => s.code === '360x360')!,\r\n  pixelSize: 0.01,\r\n  focal: 5,\r\n  axis: Axis.y,\r\n  depth: true,\r\n  triangles: [\r\n    {\r\n      id: -1,\r\n      // rotation: [90, 9, 62].map(radToStr) as Vector3AsArray,\r\n      rotation: [0, 0, 0],\r\n      move: [0, 0, 0],\r\n      triangle: Triangle.of(\r\n        [2, 0, 0],\r\n        [-1, -2, -1],\r\n        [-1, 2, 1],\r\n        new Color(255, 0, 0, 255)\r\n      ),\r\n    },\r\n    {\r\n      id: -2,\r\n      // rotation: [90, 9, 62].map(radToStr) as Vector3AsArray,\r\n      rotation: [0, 0, 0],\r\n      move: [0, 0, 0],\r\n      triangle: Triangle.of(\r\n        [0, 0, -2],\r\n        [-1, -1, 2],\r\n        [1, 1, 2],\r\n        new Color(0, 255, 0, 255)\r\n      ),\r\n    },\r\n\r\n    // {\r\n    //   id: -10,\r\n    //   rotation: [30, 45, 10],\r\n    //   move: [0.5, 0.3, 2],\r\n    //   triangle: Triangle.of(\r\n    //     [0, 0, 0],\r\n    //     [1, 0, 0],\r\n    //     [0, 1, 0],\r\n    //     new Color(63, 80, 181, 255)\r\n    //   ),\r\n    // },\r\n    // {\r\n    //   id: -11,\r\n    //   rotation: [-30, -45, -10],\r\n    //   move: [0.3, 0.5, 2],\r\n    //   triangle: Triangle.of(\r\n    //     [0, 0, 0],\r\n    //     [1, 0, 0],\r\n    //     [0, 1, 0],\r\n    //     new Color(233, 30, 99, 255)\r\n    //   ),\r\n    // },\r\n  ],\r\n}\r\n","import React, { useCallback, useState, createContext, ReactNode } from 'react'\r\n\r\nimport { Axis, Triangle, Projection } from '../../graphics'\r\nimport { PROJECTIONS, Size, SIZES } from '../data/availableValues'\r\nimport { defaultValue } from '../data/defaultValue'\r\nimport { TriangleSchema } from '../TriangleSchema'\r\n\r\nlet triangleId = 0\r\n\r\nexport interface ParametersContextValue {\r\n  handleChangeProjection?: (code: string) => void\r\n  handleChangeFocal?: (focal: number) => void\r\n  handleChangePixelSize?: (pixelSize: number) => void\r\n  handleChangeAxis?: (axis: Axis) => void\r\n  handleChangeWindowSize?: (sizeCode: string) => void\r\n  handleChangeDepth?: () => void\r\n  updateTriangleSchema: (schema: TriangleSchema) => void\r\n  addTriangleSchema: () => void\r\n\r\n  triangles: TriangleSchema[]\r\n  projection: Projection\r\n  windowSize: Size\r\n  pixelSize: number\r\n  focal: number\r\n  axis: number\r\n  depth: boolean\r\n}\r\n\r\nexport const ParametersContext = createContext<ParametersContextValue>(\r\n  defaultValue\r\n)\r\n\r\ninterface ParametersContextProviderProps {\r\n  children: ReactNode | ReactNode[]\r\n}\r\n\r\nfunction rand(min: number, max: number) {\r\n  return Math.round((Math.random() * (max - min) + min) * 10) / 10\r\n}\r\n\r\nexport function ParametersContextProvider({\r\n  children,\r\n}: ParametersContextProviderProps) {\r\n  const [depth, setDepth] = useState(true)\r\n  const [focal, setFocal] = useState<number>(defaultValue.focal)\r\n  const [axis, setAxis] = useState<Axis>(defaultValue.axis)\r\n  const [windowSize, setWindowSize] = useState<Size>(defaultValue.windowSize)\r\n  const [pixelSize, setPixelSize] = useState<number>(defaultValue.pixelSize)\r\n  const [triangles, setTriangles] = useState<TriangleSchema[]>(\r\n    defaultValue.triangles\r\n  )\r\n  const [projection, setProjection] = useState<Projection>(\r\n    defaultValue.projection\r\n  )\r\n\r\n  const handleChangeProjection = useCallback(\r\n    (name: string) => setProjection(PROJECTIONS.find((p) => p.name === name)!),\r\n    []\r\n  )\r\n  const handleChangeWindowSize = useCallback(\r\n    (sizeCode: string) =>\r\n      setWindowSize(SIZES.find((p) => p.code === sizeCode)!),\r\n    []\r\n  )\r\n  const handleChangeFocal = useCallback((f: number) => setFocal(f), [])\r\n  const handleChangeDepth = useCallback(() => setDepth(d => !d), [])\r\n  const handleChangePixelSize = useCallback(\r\n    (pxSize: number) => setPixelSize(pxSize),\r\n    []\r\n  )\r\n  const handleChangeAxis = useCallback((ax: Axis) => setAxis(ax), [])\r\n\r\n  const updateTriangleSchema = useCallback(\r\n    (schema: TriangleSchema) =>\r\n      setTriangles((ts) => ts.map((t) => (t.id === schema.id ? schema : t))),\r\n    []\r\n  )\r\n\r\n  const addTriangleSchema = useCallback(\r\n    () =>\r\n      setTriangles((ts) => [\r\n        ...ts,\r\n        {\r\n          id: triangleId++,\r\n          triangle: Triangle.of(\r\n            [rand(-5, 5), rand(-5, 5), rand(-5, 5)],\r\n            [rand(-5, 5), rand(-5, 5), rand(-5, 5)],\r\n            [rand(-5, 5), rand(-5, 5), rand(-5, 5)]\r\n          ),\r\n          move: [rand(-5, 5), rand(-5, 5), rand(-5, 5)],\r\n          rotation: [rand(0, 360), rand(0, 360), rand(0, 360)],\r\n        },\r\n      ]),\r\n    []\r\n  )\r\n\r\n  return (\r\n    <ParametersContext.Provider\r\n      value={{\r\n        handleChangeProjection,\r\n        handleChangeFocal,\r\n        handleChangePixelSize,\r\n        handleChangeAxis,\r\n        handleChangeWindowSize,\r\n        updateTriangleSchema,\r\n        addTriangleSchema,\r\n        handleChangeDepth,\r\n\r\n        triangles,\r\n        projection,\r\n        windowSize,\r\n        pixelSize,\r\n        focal,\r\n        axis,\r\n        depth,\r\n      }}\r\n    >\r\n      {children}\r\n    </ParametersContext.Provider>\r\n  )\r\n}\r\n","import React, { ChangeEvent, ReactChild, useCallback } from 'react'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\n\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n    },\r\n    small: {\r\n      minWidth: 150,\r\n    },\r\n    select: {\r\n      '&:focus': {\r\n        background: 'inherit',\r\n      },\r\n    },\r\n  })\r\n)\r\n\r\ninterface SettingsControllProps<T extends string | number> {\r\n  onChange?: (value: T) => void\r\n  /** Smaller field */\r\n  small?: boolean\r\n  value: T\r\n  label: string\r\n  children: ReactChild[]\r\n}\r\n\r\nexport function SettingsControll<T extends string | number>({\r\n  onChange,\r\n  value,\r\n  label,\r\n  children,\r\n  small,\r\n}: SettingsControllProps<T>) {\r\n  const classes = useStyles()\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const handleChange = useCallback(\r\n    onChange\r\n      ? ({ target: { value } }: ChangeEvent<{ value: any }>) => onChange(value)\r\n      : () => {},\r\n    [onChange]\r\n  )\r\n\r\n  return (\r\n    <FormControl\r\n      variant=\"outlined\"\r\n      className={clsx(classes.formControl, { [classes.small]: small })}\r\n    >\r\n      <InputLabel>{label}</InputLabel>\r\n\r\n      <Select\r\n        label={label}\r\n        value={value}\r\n        className={classes.select}\r\n        onChange={handleChange}\r\n      >\r\n        {children}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n","import React, { ChangeEvent, useContext, useState } from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport clsx from 'clsx'\r\n\r\nimport { hexToRgb } from '../utils'\r\nimport { TriangleSchema } from '../../TriangleSchema'\r\nimport { ParametersContext } from '../Parameters.context'\r\nimport { Color, Triangle, Vector3AsArray } from '../../../graphics'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    colorPreview: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n      boxShadow: theme.shadows[3],\r\n      borderRadius: theme.shape.borderRadius,\r\n      display: 'inline-flex',\r\n    },\r\n    inputs: {\r\n      maxWidth: 145,\r\n      margin: theme.spacing(1),\r\n    },\r\n    save: {\r\n      display: 'inline-flex',\r\n      verticalAlign: 'top',\r\n      margin: theme.spacing(2),\r\n    },\r\n  })\r\n)\r\n\r\ninterface TriangleProps {\r\n  schema: TriangleSchema\r\n}\r\n\r\nexport function TriangleEditor({ schema }: TriangleProps) {\r\n  const classes = useStyles()\r\n\r\n  const { updateTriangleSchema } = useContext(ParametersContext)\r\n\r\n  const [rotation, setRotation] = useState(schema.rotation.join(', '))\r\n  const [move, setMove] = useState(() => schema.move.join(', '))\r\n  const [pointA, setPointA] = useState(() =>\r\n    schema.triangle.p1.asVector3Array().join(', ')\r\n  )\r\n  const [pointB, setPointB] = useState(() =>\r\n    schema.triangle.p2.asVector3Array().join(', ')\r\n  )\r\n  const [pointC, setPointC] = useState(() =>\r\n    schema.triangle.p3.asVector3Array().join(', ')\r\n  )\r\n  const [color, setColor] = useState(\r\n    () => '#' + schema.triangle.color.toRGBArray().join('')\r\n  )\r\n\r\n  const handleChangeColor = ({\r\n    target: { value },\r\n  }: ChangeEvent<HTMLInputElement>) => {\r\n    if (value.length <= 7 && value.match(/^#[0-9a-f]*$/i)) {\r\n      setColor(value)\r\n    }\r\n  }\r\n\r\n  const handleChangeRotation = ({\r\n    target: { value },\r\n  }: ChangeEvent<HTMLInputElement>) => setRotation(value)\r\n\r\n  const handleChangeMove = ({\r\n    target: { value },\r\n  }: ChangeEvent<HTMLInputElement>) => setMove(value)\r\n\r\n  const handleChangePointA = ({\r\n    target: { value },\r\n  }: ChangeEvent<HTMLInputElement>) => setPointA(value)\r\n\r\n  const handleChangePointB = ({\r\n    target: { value },\r\n  }: ChangeEvent<HTMLInputElement>) => setPointB(value)\r\n\r\n  const handleChangePointC = ({\r\n    target: { value },\r\n  }: ChangeEvent<HTMLInputElement>) => setPointC(value)\r\n\r\n  const handleSave = () => {\r\n    const _rotation = rotation\r\n      .replaceAll(' ', '')\r\n      .split(',')\r\n      .map((v) => parseFloat(v)) as Vector3AsArray\r\n\r\n    if (_rotation.length !== 3 || _rotation.some((v) => Number.isNaN(v))) {\r\n      alert(`Błąd danych rotacji`)\r\n\r\n      return\r\n    }\r\n\r\n    const _move = move\r\n      .replaceAll(' ', '')\r\n      .split(',')\r\n      .map((v) => parseFloat(v)) as Vector3AsArray\r\n\r\n    if (_move.length !== 3 || _move.some((v) => Number.isNaN(v))) {\r\n      alert(`Błąd danych przemieszczenia`)\r\n\r\n      return\r\n    }\r\n\r\n    const _color = hexToRgb(color)\r\n\r\n    if (_color === null) {\r\n      alert(`Błąd danych kolor`)\r\n\r\n      return\r\n    }\r\n\r\n    const _pointA = pointA\r\n      .replaceAll(' ', '')\r\n      .split(',')\r\n      .map((v) => parseFloat(v)) as Vector3AsArray\r\n\r\n    if (_pointA.length !== 3 || _pointA.some((v) => Number.isNaN(v))) {\r\n      alert(`Błąd danych punkt A`)\r\n\r\n      return\r\n    }\r\n\r\n    const _pointB = pointB\r\n      .replaceAll(' ', '')\r\n      .split(',')\r\n      .map((v) => parseFloat(v)) as Vector3AsArray\r\n\r\n    if (_pointB.length !== 3 || _pointB.some((v) => Number.isNaN(v))) {\r\n      alert(`Błąd danych punkt B`)\r\n\r\n      return\r\n    }\r\n\r\n    const _pointC = pointC\r\n      .replaceAll(' ', '')\r\n      .split(',')\r\n      .map((v) => parseFloat(v)) as Vector3AsArray\r\n\r\n    if (_pointC.length !== 3 || _pointC.some((v) => Number.isNaN(v))) {\r\n      alert(`Błąd danych punkt C`)\r\n\r\n      return\r\n    }\r\n\r\n    updateTriangleSchema({\r\n      ...schema,\r\n      rotation: _rotation,\r\n      move: _move,\r\n      triangle: Triangle.of(\r\n        _pointA,\r\n        _pointB,\r\n        _pointC,\r\n        new Color(..._color, 255)\r\n      ),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={clsx(classes.colorPreview, classes.inputs)}\r\n        style={{ backgroundColor: color }}\r\n      />\r\n\r\n      <TextField\r\n        value={color}\r\n        label=\"Kolor\"\r\n        variant=\"outlined\"\r\n        className={classes.inputs}\r\n        onChange={handleChangeColor}\r\n      />\r\n\r\n      <TextField\r\n        value={pointA}\r\n        label=\"Punkt A\"\r\n        variant=\"outlined\"\r\n        className={classes.inputs}\r\n        onChange={handleChangePointA}\r\n      />\r\n\r\n      <TextField\r\n        value={pointB}\r\n        label=\"Punkt B\"\r\n        variant=\"outlined\"\r\n        className={classes.inputs}\r\n        onChange={handleChangePointB}\r\n      />\r\n\r\n      <TextField\r\n        value={pointC}\r\n        label=\"Punkt C\"\r\n        variant=\"outlined\"\r\n        className={classes.inputs}\r\n        onChange={handleChangePointC}\r\n      />\r\n\r\n      <TextField\r\n        value={rotation}\r\n        label=\"Roll, Pitch, Yaw\"\r\n        variant=\"outlined\"\r\n        className={classes.inputs}\r\n        onChange={handleChangeRotation}\r\n      />\r\n\r\n      <TextField\r\n        value={move}\r\n        label=\"Przesunięcie: X, Y, Z\"\r\n        variant=\"outlined\"\r\n        className={classes.inputs}\r\n        onChange={handleChangeMove}\r\n      />\r\n\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        className={classes.save}\r\n        onClick={handleSave}\r\n      >\r\n        Zapisz\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { Vector3AsArray } from '../../graphics'\r\n\r\nexport function hexToRgb(hex: string): Vector3AsArray | null {\r\n  const result =\r\n    /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex) ||\r\n    /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i.exec(hex)\r\n\r\n  return result\r\n    ? [\r\n        parseInt(result[1], 16),\r\n        parseInt(result[2], 16),\r\n        parseInt(result[3], 16),\r\n      ]\r\n    : null\r\n}\r\n","import React, { useContext } from 'react'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Button from '@material-ui/core/Button'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n\r\nimport {\r\n  AXIS,\r\n  SIZES,\r\n  FOCALS,\r\n  PIXEL_SIZES,\r\n  PROJECTIONS,\r\n  perspectiveProjection,\r\n} from '../data/availableValues'\r\nimport { Axis } from '../../graphics'\r\nimport { ParametersContext } from './Parameters.context'\r\nimport { SettingsControll, TriangleEditor } from './components'\r\n\r\nexport function Parameters() {\r\n  const {\r\n    axis,\r\n    depth,\r\n    focal,\r\n    triangles,\r\n    pixelSize,\r\n    projection,\r\n    windowSize,\r\n    handleChangeDepth,\r\n    addTriangleSchema,\r\n    handleChangeProjection,\r\n    handleChangeFocal,\r\n    handleChangePixelSize,\r\n    handleChangeAxis,\r\n    handleChangeWindowSize,\r\n  } = useContext(ParametersContext)\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <SettingsControll\r\n          onChange={handleChangeProjection}\r\n          label=\"Rzutowanie\"\r\n          value={projection.name}\r\n        >\r\n          {PROJECTIONS.map((proj) => (\r\n            <MenuItem key={proj.name} value={proj.name}>\r\n              {proj.name}\r\n            </MenuItem>\r\n          ))}\r\n        </SettingsControll>\r\n\r\n        <SettingsControll\r\n          onChange={handleChangeWindowSize}\r\n          label=\"Rozmiar okna\"\r\n          value={windowSize.code}\r\n        >\r\n          {SIZES.map((size) => (\r\n            <MenuItem key={size.code} value={size.code}>\r\n              {size.width} x {size.height}\r\n            </MenuItem>\r\n          ))}\r\n        </SettingsControll>\r\n\r\n        <SettingsControll\r\n          onChange={handleChangePixelSize}\r\n          label=\"Rozmiar piksela\"\r\n          value={pixelSize}\r\n          small\r\n        >\r\n          {PIXEL_SIZES.map((pxSize) => (\r\n            <MenuItem key={pxSize} value={pxSize}>\r\n              {pxSize.toFixed(3)}\r\n            </MenuItem>\r\n          ))}\r\n        </SettingsControll>\r\n\r\n        <SettingsControll\r\n          onChange={handleChangeAxis}\r\n          label=\"Oś\"\r\n          value={axis}\r\n          small\r\n        >\r\n          {AXIS.map((ax) => (\r\n            <MenuItem key={ax} value={ax}>\r\n              {Axis[ax].toUpperCase()}\r\n            </MenuItem>\r\n          ))}\r\n        </SettingsControll>\r\n\r\n        {projection.name === perspectiveProjection.name && (\r\n          <SettingsControll\r\n            onChange={handleChangeFocal}\r\n            label=\"Ogniskowa\"\r\n            value={focal}\r\n            small\r\n          >\r\n            {FOCALS.map((focal) => (\r\n              <MenuItem key={focal} value={focal}>\r\n                {focal.toFixed(2)}\r\n              </MenuItem>\r\n            ))}\r\n          </SettingsControll>\r\n        )}\r\n\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={depth}\r\n              onChange={handleChangeDepth}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Odległość\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Trójkąty\r\n        </Typography>\r\n\r\n        {triangles.map((schema) => (\r\n          <TriangleEditor key={schema.id} schema={schema} />\r\n        ))}\r\n\r\n        <Button variant=\"outlined\" onClick={addTriangleSchema}>\r\n          Dodaj trójkąt\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { RefObject, useContext, useEffect, useMemo, useRef } from 'react'\r\n\r\nimport { Render } from '../Render'\r\nimport { flatColors } from './utils'\r\nimport { Bitmap, Camera, generateBitmap } from '../graphics'\r\nimport { ParametersContext } from './Parameters'\r\n\r\nexport function useImage(canvas: RefObject<HTMLCanvasElement>): void {\r\n  const {\r\n    axis,\r\n    depth,\r\n    focal,\r\n    pixelSize,\r\n    projection,\r\n    triangles,\r\n    windowSize: { width, height },\r\n  } = useContext(ParametersContext)\r\n\r\n  //#region Cache\r\n  const ctx = useRef<CanvasRenderingContext2D>(null)\r\n\r\n  /** For cache */\r\n  const bitmap: Bitmap = useMemo(() => generateBitmap(width, height), [\r\n    width,\r\n    height,\r\n  ])\r\n\r\n  /** For cache */\r\n  const flatBitmap: number[] = useMemo(() => new Array(width * height * 4), [\r\n    width,\r\n    height,\r\n  ])\r\n  //#endregion Cache\r\n\r\n  useEffect(() => {\r\n    if (!canvas.current) return\r\n\r\n    // @ts-ignore .current - readonly\r\n    if (!ctx.current) ctx.current = canvas.current.getContext('2d')!\r\n\r\n    const image: Bitmap = Render(\r\n      triangles,\r\n      width,\r\n      height,\r\n      pixelSize,\r\n      new Camera(focal, axis),\r\n      projection,\r\n      bitmap,\r\n      depth\r\n    )\r\n\r\n    ctx.current.putImageData(\r\n      new ImageData(flatColors(image, flatBitmap), width, height),\r\n      0,\r\n      0\r\n    )\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [triangles, axis, focal, pixelSize, projection, width, height, depth])\r\n}\r\n","import {\r\n  Vector3,\r\n  Projection,\r\n  translation,\r\n  RPYRotation,\r\n  Triangle,\r\n  TriangleCompiled,\r\n  Camera,\r\n  Bitmap,\r\n} from './graphics'\r\nimport { TriangleSchema } from './ui-components/TriangleSchema'\r\n\r\n/**\r\n * @param img For cache\r\n */\r\nexport function Render(\r\n  trianglesSchemas: TriangleSchema[],\r\n  width: number,\r\n  height: number,\r\n  pixelSize: number,\r\n  camera: Camera,\r\n  projection: Projection,\r\n  img: Bitmap,\r\n  depthByTransparency = true\r\n): Bitmap {\r\n  const triangles: Triangle[] = trianglesSchemas.map(\r\n    ({ triangle, move, rotation }) =>\r\n      triangle\r\n        .transform(RPYRotation(...rotation))\r\n        .transform(translation(...move))\r\n        .transform(camera.position)\r\n  )\r\n\r\n  const notTransformed: TriangleCompiled[] = triangles.map((triangle) =>\r\n    triangle.compile(camera)\r\n  )\r\n\r\n  const transformed: TriangleCompiled[] = triangles.map((triangle) =>\r\n    triangle.transform(projection.transformation(camera)).compile(camera)\r\n  )\r\n\r\n  const width2 = width / 2\r\n  const height2 = width / 2\r\n\r\n  /* Wektor położenia obsługiwanego piksela */\r\n  const pxV = new Vector3(0, 0, 0)\r\n  pxV.set(camera.axis, camera.viewportDistance - camera.f)\r\n\r\n  let minDepth = 0\r\n  let maxDepth = 0\r\n\r\n  if (depthByTransparency) {\r\n    const distances = transformed.flatMap((t, k) =>\r\n      [t.triangle.p1, t.triangle.p2, t.triangle.p3].map((p) =>\r\n        Math.sqrt(\r\n          notTransformed[k].plane.distanceTo2(\r\n            p,\r\n            projection.directionVector(p, camera)\r\n          )\r\n        )\r\n      )\r\n    )\r\n\r\n    minDepth = Math.min(...distances)\r\n    maxDepth = Math.max(...distances)\r\n  }\r\n\r\n  const depthDiffrance = maxDepth - minDepth\r\n\r\n  for (let i = 0; i < height; i++) {\r\n    // Odwrotna oś Y!\r\n    pxV.set(camera.verticalAxis, (height2 - i) * pixelSize)\r\n\r\n    for (let j = 0; j < width; j++) {\r\n      pxV.set(camera.horizontalAxis, (j - width2) * pixelSize)\r\n\r\n      img[i][j].reset()\r\n\r\n      for (let k = 0; k < transformed.length; k++) {\r\n        const triangle = transformed[k]\r\n\r\n        if (triangle.testInside2d(pxV)) {\r\n          // Płaszczyzna trójkąta przed transformacją !\r\n          const d2 = notTransformed[k].plane.distanceTo2(\r\n            pxV,\r\n            projection.directionVector(pxV, camera)\r\n          )\r\n\r\n          if (d2 < img[i][j].buf) {\r\n            img[i][j].buf = d2\r\n            img[i][j].copyFrom(triangle.color)\r\n\r\n            if (depthByTransparency) {\r\n              img[i][j].a = Math.round(\r\n                ((maxDepth - Math.sqrt(d2)) / depthDiffrance) * 255\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return img\r\n}\r\n","import { Bitmap } from '../graphics'\r\n\r\n/**\r\n * Zamienia macierz kolorów na płaski ciąg bajtów\r\n * @param data For cache\r\n */\r\nexport function flatColors(bitmap: Bitmap, data: number[]): Uint8ClampedArray {\r\n  const height = bitmap.length\r\n  const width = bitmap[0].length\r\n\r\n  for (let i = 0; i < height; i++) {\r\n    const i4w = i * 4 * width\r\n\r\n    for (let j = 0; j < width; j++) {\r\n      const j4i4w = j * 4 + i4w\r\n\r\n      data[j4i4w + 0] = bitmap[i][j].r\r\n      data[j4i4w + 1] = bitmap[i][j].g\r\n      data[j4i4w + 2] = bitmap[i][j].b\r\n      data[j4i4w + 3] = bitmap[i][j].a\r\n    }\r\n  }\r\n\r\n  return Uint8ClampedArray.from(data)\r\n}\r\n","import React, { useContext, useRef } from 'react'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { Parameters, ParametersContext } from './Parameters'\r\nimport { useImage } from './useImage'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    image: {\r\n      display: 'flex',\r\n      overflow: 'hidden',\r\n      margin: theme.spacing(2, 'auto'),\r\n      maxWidth: '100%',\r\n    },\r\n    canvas: {\r\n      display: 'block',\r\n    },\r\n    settings: {\r\n      padding: theme.spacing(2),\r\n      [theme.breakpoints.up('md')]: {\r\n        padding: theme.spacing(4),\r\n      },\r\n    },\r\n  })\r\n)\r\n\r\nexport function GraphicCanvas() {\r\n  const classes = useStyles()\r\n  const canvas = useRef<HTMLCanvasElement>(null)\r\n  const {\r\n    windowSize: { width, height },\r\n  } = useContext(ParametersContext)\r\n\r\n  useImage(canvas)\r\n\r\n  return (\r\n    <Container>\r\n      <Paper elevation={3} className={classes.image} style={{ width, height }}>\r\n        <canvas\r\n          ref={canvas}\r\n          width={width}\r\n          height={height}\r\n          className={classes.canvas}\r\n        />\r\n      </Paper>\r\n\r\n      <Paper className={classes.settings}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Ustawienia\r\n        </Typography>\r\n\r\n        <Parameters />\r\n      </Paper>\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\n\r\nimport { ParametersContextProvider } from './ui-components/Parameters'\r\nimport { GraphicCanvas } from './ui-components/GraphicCanvas'\r\n\r\nfunction App() {\r\n  return (\r\n    <CssBaseline>\r\n      <ParametersContextProvider>\r\n        <GraphicCanvas />\r\n      </ParametersContextProvider>\r\n    </CssBaseline>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","export * from './math'\r\nexport * from './geometry'\r\nexport * from './projections'\r\nexport * from './transformations'\r\n"],"sourceRoot":""}