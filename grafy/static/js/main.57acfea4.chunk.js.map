{"version":3,"sources":["Header/Info.tsx","Header/Header.tsx","BFS/Code.tsx","BFS/Matrix/MatrixContainer.tsx","BFS/Matrix/Matrix.tsx","Graph/Graph.ts","BFS/EndInfo.tsx","BFS/BFSAlgorythm.ts","GraphContext/GraphContext.tsx","BFS/Lists/NodeBox.tsx","BFS/Lists/List.tsx","BFS/Lists/Distance.tsx","BFS/Lists/Variables.tsx","BFS/Lists/Visited.tsx","BFS/Lists/Queue.tsx","BFS/BFS.tsx","BFS/useBFSAlgorithm.tsx","Navigation/TabLabel.tsx","Navigation/TabPanel.tsx","NewGraph/Topic.tsx","NewGraph/GraphToString.ts","NewGraph/defaultGraphs.ts","NewGraph/CheckGraphMatrixStringReprezentation.ts","NewGraph/useNewGraph.tsx","NewGraph/parseGraph.ts","NewGraph/NewGraph.tsx","GraphPresentation/GraphPresentation.tsx","Navigation/Navigation.tsx","Navigation/useNavigation.tsx","App.tsx","serviceWorker.ts","index.tsx","img/logo.png"],"names":["useStyles","makeStyles","theme","title","backgroundColor","palette","grey","logo","width","margin","display","marginBottom","spacing","Info","classes","useState","localStorage","getItem","open","setOpen","useEffect","setItem","Date","toString","openDialog","useCallback","closeDialog","IconButton","onClick","color","Dialog","onClose","DialogTitle","root","DialogContent","dividers","src","alt","className","Typography","gutterBottom","DialogActions","Button","autoFocus","flexGrow","breakpoints","down","fontSize","typography","Header","AppBar","position","Toolbar","variant","background","common","white","maxWidth","overflow","padding","line","pxToRem","lineNb","fontWeight","textAlign","primary","main","paddingRight","lineContent","paddingLeft","whiteSpace","indentation","minWidth","borderLeft","Code","code","selectedLine","lineNbStyle","Math","floor","log10","length","Paper","map","i","id","content","key","style","Array","fill","_","h5","border","endings","justifyContent","top","height","left","right","container","MatrixContainer","children","row","selectedRow","col","lineHeight","Matrix","graph","first","markFirst","mapColumns","classNames","value","j","A","charCodeAt","Z","Graph","adjMatrix","adjacencyMatrix","this","rowMap","colMap","callback","fromIndexToName","label","edges","from","to","push","index","Size","neighbors","String","fromCharCode","icon","EndInfo","end","visited","distances","openOnFirst","start","usedFirstOpen","setUsedFirstOpen","startName","findedAll","every","v","size","dst","Number","isFinite","Copy","arr","slice","IStep","queue","markFirstInMatrix","neighbor","firstIndex","Empty","BFSAlgorythm","startIndex","steps","Infinity","mainCode","shift","DeQueue","getNeighbors","ifNeighbor","visit","defaultValue","loadGraph","isGraphLoaded","deleteGraph","graphContext","createContext","Provider","GraphContextProvider","setGraph","setIsGraphLoaded","graphAdjacencyMatrix","verticalAlign","marginLeft","marginRight","contrastText","boxShadow","shadows","disabled","NodeBox","name","elevation","flexWrap","alignItems","empty","marginTop","list","List","emptyMessage","Distance","spacer","Variables","variables","variable","Visited","vis","Queue","navigation","navigationIcon","flex","step","userSelect","middle","formControl","select","stepsReport","flexDirection","largeIcon","BFS","setStep","setStart","useContext","algotythm","setAlgorythm","updateStart","event","newStart","parseInt","target","nextStep","previusStep","scrollToBegining","scrollToEnd","max","correctLoaded","currentStep","finishStep","useBFSAlgorithm","FormControl","Select","onChange","mapNodes","MenuItem","aria-label","fontSizeLarge","shortContent","up","textTransform","TabLabel","box","TabPanel","forwardRef","ref","fullContent","classess","visable","role","hidden","undefined","Box","p","values","sm","Topic","GraphToString","grapth","separator","sub","join","randomGraph","n","successRatio","random","buildInGraphs","userGraphs","userGraphsLocalStorage","JSON","parse","availableGraphs","CheckGraphMatrixStringReprezentation","text","obj","isArray","nb","val","isNaN","useNewGraph","addNewGraph","selectedDefaultGraph","setSelectedDefaultGraph","aviableGraphs","setText","textError","setTextError","errorMessage","setErrorMessage","handleSelectChange","useDefaultGraph","handleChange","handleBlur","err","handleUseButton","str","newGraph","toLocaleDateString","hour","minute","stringify","addNewDefaultGraph","section","md","buttonList","buttonText","textField","textArea","minHeight","NewGraph","TextField","multiline","error","onBlur","placeholder","inputProps","options","nodes","shape","font","indigo","borderWidth","arrows","autoResize","locale","GraphPresentation","containerRef","network","setNetwork","current","data","getNodes","getEdges","offsetWidth","offsetHeight","newNetwork","Network","destroy","tab","Navigation","networkTabPanelRef","useRef","openTab","setOpenTabId","useNavigation","square","Tabs","centered","indicatorColor","Tab","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.57acfea4.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\n\r\nimport logo from '../img/logo.png'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  title: {\r\n    backgroundColor: theme.palette.grey[100],\r\n  },\r\n  logo: {\r\n    width: 192,\r\n    margin: 'auto',\r\n    display: 'block',\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n}))\r\n\r\nexport default function Info() {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(localStorage.getItem('welcome') === null)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('welcome', Date().toString())\r\n  }, [])\r\n\r\n  const openDialog = useCallback(() => {\r\n    setOpen(true)\r\n  }, [])\r\n\r\n  const closeDialog = useCallback(() => {\r\n    setOpen(false)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={openDialog} color=\"inherit\" title=\"Informacje\">\r\n        <InfoIcon />\r\n      </IconButton>\r\n\r\n      <Dialog onClose={closeDialog} open={open}>\r\n        <DialogTitle classes={{ root: classes.title }}>\r\n          Informacje o projekcie\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers>\r\n          <img src={logo} alt=\"Logo\" className={classes.logo} />\r\n\r\n          <Typography gutterBottom>\r\n            <b>Cel</b>\r\n            <br />\r\n            Wyznaczenie odległości pomiędzy dowolnymi wierzchołkami w grafie\r\n            spójnym skierowanym. Wykorzystanie algorytmu BFS\r\n          </Typography>\r\n\r\n          <Typography gutterBottom>\r\n            <b>Jak wprowadzić graf?</b>\r\n            <br />\r\n            Można skorzystać z gotowych grafów wybierając je z listy lub\r\n            wprowadzić swój graf\r\n          </Typography>\r\n\r\n          <Typography gutterBottom>\r\n            <b>Format danych</b>\r\n            <br />\r\n            Dwuwymiarowa tablica JSON np [ [0, 1], [1, 0] ]\r\n          </Typography>\r\n\r\n          <Typography>\r\n            <b>Krótka instrukcja</b>\r\n            <br />\r\n            Jeżeli wybierzesz jeden z dostępnych grafów zostanie on załadowanych\r\n            do edytora, można go edytować\r\n            <br />\r\n            Stworzone grafy zostaną zapisane i będą dostępne na liście\r\n            <br />\r\n            Dostęp do zakładek z znajdowaniem odległości oraz do wizualizacji\r\n            grafu pojawi się po wybraniu grafu\r\n            <br />\r\n            Po wybraniu grafu przechodzimy do zakładki znajdowanie odległości,\r\n            tam wybiramy wierzchołek startowy\r\n            <br />\r\n            Strzałkami na dole przechodzimy do kolejnych kroków algorytmu\r\n            <br />\r\n            Po przejściu całego algorytmu pojawi się raport końcowy, można go\r\n            otworzyć również przyciskiem na dole\r\n          </Typography>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button autoFocus onClick={closeDialog} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Info from './Info'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: theme.typography.fontSize,\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function Header() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          classes={{ root: classes.title }}\r\n        >\r\n          Kamil Mikołajczuk - Grafy i Sieci\r\n        </Typography>\r\n\r\n        <Info />\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nexport interface ICode {\r\n  id: number\r\n  content: string\r\n  indentation: number\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    '& ::selection': {\r\n      background: theme.palette.grey[500],\r\n      color: theme.palette.common.white,\r\n    },\r\n    maxWidth: '100%',\r\n    overflow: 'hidden',\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    width: 'fit-content',\r\n    color: theme.palette.grey[800],\r\n  },\r\n  line: {\r\n    display: 'flex',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: theme.typography.pxToRem(theme.typography.fontSize * 0.8),\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[100],\r\n    },\r\n  },\r\n  lineNb: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'right',\r\n    color: theme.palette.primary.main,\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  lineContent: {\r\n    paddingLeft: 4,\r\n    whiteSpace: 'nowrap',\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  indentation: {\r\n    minWidth: theme.spacing(1.5),\r\n    borderLeft: `1px solid ${theme.palette.grey[300]}`,\r\n  },\r\n}))\r\n\r\ninterface ICodeProps {\r\n  code: ICode[]\r\n  selectedLine: number\r\n}\r\n\r\nexport default function Code({ code, selectedLine }: ICodeProps) {\r\n  const classes = useStyles()\r\n\r\n  const lineNbStyle = {\r\n    minWidth: `${Math.floor(Math.log10(code.length) + 1)}em`,\r\n  }\r\n\r\n  return (\r\n    <Paper classes={{ root: classes.root }}>\r\n      {code.map(({ id, content, indentation }, i) => (\r\n        <div key={id} className={classes.line}>\r\n          <div className={classes.lineNb} style={lineNbStyle}>\r\n            {i + 1}\r\n          </div>\r\n\r\n          {Array(indentation)\r\n            .fill(0)\r\n            .map((_, i) => (\r\n              <div key={i} className={classes.indentation} />\r\n            ))}\r\n\r\n          <div\r\n            style={{\r\n              fontWeight: id === selectedLine ? 'bold' : 'normal',\r\n            }}\r\n            className={classes.lineContent}\r\n          >\r\n            {content}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </Paper>\r\n  )\r\n}\r\n","import React, { ReactNode } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: 'min-content',\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    fontSize: theme.typography.h5.fontSize,\r\n  },\r\n  border: {\r\n    width: 4,\r\n    backgroundColor: theme.palette.grey[900],\r\n  },\r\n  endings: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    '&:before, &:after': {\r\n      top: 0,\r\n      width: 16,\r\n      height: 4,\r\n      content: '\"\"',\r\n      display: 'block',\r\n      backgroundColor: theme.palette.grey[900],\r\n    },\r\n    '&:before': {\r\n      left: 0,\r\n    },\r\n    '&:after': {\r\n      right: 0,\r\n    },\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n  },\r\n  main: {\r\n    margin: 2,\r\n  },\r\n}))\r\n\r\ninterface IMatrixContainerProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport default function MatrixContainer({ children }: IMatrixContainerProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper classes={{ root: classes.root }}>\r\n      <div className={classes.endings} />\r\n\r\n      <div className={classes.container}>\r\n        <div className={classes.border} />\r\n\r\n        <div className={classes.main}>{children}</div>\r\n\r\n        <div className={classes.border} />\r\n      </div>\r\n\r\n      <div className={classes.endings} />\r\n    </Paper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport classNames from 'classnames'\r\n\r\nimport Graph from '../../Graph'\r\nimport MatrixContainer from './MatrixContainer'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  row: {\r\n    display: 'flex',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[100],\r\n    },\r\n  },\r\n  selectedRow: {\r\n    fontWeight: 'bold',\r\n  },\r\n  col: {\r\n    width: '1em',\r\n    height: ' 1em',\r\n    lineHeight: '1em',\r\n    textAlign: 'center',\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}))\r\n\r\ninterface IMatrixProps {\r\n  graph: Graph\r\n  first: number\r\n  markFirst: boolean\r\n}\r\n\r\nexport default function Matrix({ graph, first, markFirst }: IMatrixProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <MatrixContainer>\r\n      {graph.map((mapColumns, i) => (\r\n        <div\r\n          key={i}\r\n          className={classNames(classes.row, {\r\n            [classes.selectedRow]: markFirst && first === i,\r\n          })}\r\n        >\r\n          {mapColumns((value, j) => (\r\n            <div key={j} className={classes.col}>\r\n              {value}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </MatrixContainer>\r\n  )\r\n}\r\n","import { Edge, Node } from 'vis'\r\n\r\nconst A = 'A'.charCodeAt(0)\r\nconst Z = 'Z'.charCodeAt(0)\r\n\r\ntype ColMap<T> = (value: number, j: number) => T\r\ntype RowMap<T, R> = (map: (colMap: ColMap<R>) => R[], i: number) => T\r\n\r\nexport default class Graph {\r\n  private adjacencyMatrix: number[][]\r\n\r\n  public get Size() {\r\n    return this.adjacencyMatrix.length\r\n  }\r\n\r\n  constructor(adjMatrix: number[][]) {\r\n    this.adjacencyMatrix = adjMatrix\r\n  }\r\n\r\n  public map<T, R>(rowMap: RowMap<T, R>) {\r\n    return this.adjacencyMatrix.map((row, i) =>\r\n      rowMap((colMap) => row.map((value, j) => colMap(value, j)), i)\r\n    )\r\n  }\r\n\r\n  public mapNodes<T>(callback: (name: string, index: number) => T) {\r\n    return this.adjacencyMatrix.map((_, i) =>\r\n      callback(Graph.fromIndexToName(i), i)\r\n    )\r\n  }\r\n\r\n  public getNodes() {\r\n    return this.adjacencyMatrix.map(\r\n      (_, id) => ({ id, label: Graph.fromIndexToName(id) } as Node)\r\n    )\r\n  }\r\n\r\n  public getEdges() {\r\n    const edges: Edge[] = []\r\n\r\n    for (let from = 0; from < this.adjacencyMatrix.length; from++) {\r\n      for (let to = 0; to < this.adjacencyMatrix.length; to++) {\r\n        if (this.adjacencyMatrix[from][to] !== 0) {\r\n          edges.push({ from, to })\r\n        }\r\n      }\r\n    }\r\n\r\n    return edges\r\n  }\r\n\r\n  public getNeighbors(index: number) {\r\n    if (index < 0 || index >= this.Size) return []\r\n\r\n    const neighbors: number[] = []\r\n\r\n    for (let to = 0; to < this.adjacencyMatrix.length; to++) {\r\n      if (this.adjacencyMatrix[index][to] !== 0) {\r\n        neighbors.push(to)\r\n      }\r\n    }\r\n\r\n    return neighbors\r\n  }\r\n\r\n  public static fromIndexToName(index: number) {\r\n    return index + A > Z ? index.toString() : String.fromCharCode(index + A)\r\n  }\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll'\r\n\r\nimport Graph from '../Graph'\r\nimport { IStep } from './BFSAlgorythm'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  title: {\r\n    backgroundColor: theme.palette.grey[100],\r\n  },\r\n  icon: {\r\n    marginBottom: theme.spacing(1),\r\n    color: theme.palette.primary.main,\r\n  },\r\n}))\r\n\r\ninterface IEndInfoProps {\r\n  end: IStep\r\n  start: number\r\n  openOnFirst: boolean\r\n}\r\n\r\nexport default function EndInfo({\r\n  end: { visited, distances },\r\n  openOnFirst,\r\n  start,\r\n}: IEndInfoProps) {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(openOnFirst)\r\n  const [usedFirstOpen, setUsedFirstOpen] = useState(openOnFirst)\r\n\r\n  useEffect(() => {\r\n    if (openOnFirst && !usedFirstOpen) {\r\n      setOpen(true)\r\n      setUsedFirstOpen(true)\r\n    }\r\n  }, [openOnFirst, usedFirstOpen])\r\n\r\n  useEffect(() => {\r\n    setUsedFirstOpen(false)\r\n  }, [start])\r\n\r\n  const startName = Graph.fromIndexToName(start)\r\n\r\n  const openDialog = useCallback(() => {\r\n    setOpen(true)\r\n  }, [])\r\n\r\n  const closeDialog = useCallback(() => {\r\n    setOpen(false)\r\n  }, [])\r\n\r\n  const findedAll = visited.every((v) => v)\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        title=\"Raport\"\r\n        size=\"medium\"\r\n        onClick={openDialog}\r\n        classes={{ root: classes.icon }}\r\n      >\r\n        <DoneAllIcon color=\"primary\" />\r\n      </IconButton>\r\n\r\n      <Dialog onClose={closeDialog} open={open}>\r\n        <DialogTitle classes={{ root: classes.title }}>Raport</DialogTitle>\r\n\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            {findedAll\r\n              ? `Z wierzchołka ${startName} osiągalne są wszystkie wierzchołki`\r\n              : `Nie wszystkie wierzchołki są nieosiągalne z wierzchołka ${startName} więc graf nie jest silnie spójny`}\r\n          </Typography>\r\n\r\n          <Typography gutterBottom>\r\n            Odległości pomiędzy wierzchołkami to odpowiednio\r\n          </Typography>\r\n\r\n          {distances.map((dst, i) => (\r\n            <Typography key={i} gutterBottom={i === distances.length - 1}>\r\n              z {startName} do {Graph.fromIndexToName(i)} -{' '}\r\n              {Number.isFinite(dst) ? dst : 'nieosiągalny'}\r\n            </Typography>\r\n          ))}\r\n\r\n          <Typography>Zobacz graficzną prezentację grafu!</Typography>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button autoFocus onClick={closeDialog} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n","import Graph from '../Graph'\r\n\r\nimport { ICode } from './Code'\r\n\r\nfunction Copy<T>(arr: T[]) {\r\n  return arr.slice(0)\r\n}\r\n\r\ninterface IStepParams {\r\n  line: number\r\n  queue: number[]\r\n  visited: boolean[]\r\n  distances: number[]\r\n  first?: number\r\n  markFirstInMatrix?: boolean\r\n  neighbor?: number\r\n}\r\n\r\nexport class IStep {\r\n  public queue: string[]\r\n  public visited: boolean[]\r\n  public distances: number[]\r\n\r\n  public line: number\r\n  public first: string\r\n  public neighbor: string\r\n  public firstIndex: number\r\n  public markFirstInMatrix: boolean\r\n\r\n  public static Empty = new IStep({\r\n    line: -1,\r\n    queue: [],\r\n    visited: [],\r\n    distances: [],\r\n  })\r\n\r\n  constructor({\r\n    line,\r\n    queue,\r\n    visited,\r\n    distances,\r\n    first = -1,\r\n    markFirstInMatrix = false,\r\n    neighbor = -1,\r\n  }: IStepParams) {\r\n    this.queue = queue.map((id) => Graph.fromIndexToName(id))\r\n    this.visited = Copy(visited)\r\n    this.distances = Copy(distances)\r\n    this.line = line\r\n    this.firstIndex = first\r\n    this.first = first < 0 ? '' : Graph.fromIndexToName(first)\r\n    this.markFirstInMatrix = markFirstInMatrix\r\n    this.neighbor = neighbor < 0 ? '' : Graph.fromIndexToName(neighbor)\r\n  }\r\n}\r\n\r\nexport class BFSAlgorythm {\r\n  public steps: IStep[] = []\r\n\r\n  private static readonly mainCode = 2\r\n  private static readonly DeQueue = 8\r\n  private static readonly ifNeighbor = 11\r\n  private static readonly visit = 13\r\n\r\n  // [indentation, content]\r\n  public static readonly code: ICode[] = [\r\n    [\r\n      0,\r\n      'Odwiedzone[...] = NIE; Odległość[...] = Nieskończoność; Kolejka = Pusta',\r\n    ],\r\n    [0, ''],\r\n    // 2\r\n    [0, 'Odwiedzone[Startowy] = TAK'],\r\n    [0, 'Odległość[Startowy] = 0'],\r\n    [0, 'Kolejka.Wstaw(Startowy)'],\r\n    [0, ''],\r\n    [0, 'Dopóki Kolejka nie jest pusta'],\r\n    [0, ''],\r\n    // 8\r\n    [1, 'Pierwszy = Kolejka.Następny()'],\r\n    [1, \"Dla każdego Sąsiad'a wierzchołka Pierwszy\"],\r\n    [1, ''],\r\n    // 11\r\n    [2, 'Jeżeli Odwiedzone[Sąsiad] == NIE'],\r\n    [2, ''],\r\n    // 13\r\n    [3, 'Odwiedzone[Sąsiad] = TAK'],\r\n    [3, 'Odległość[Sąsiad] = Odległość[Pierwszy] + 1'],\r\n    [3, 'Kolejka.Wstaw(Sąsiad)'],\r\n  ].map(([indentation, content], id) => ({ id, content, indentation } as ICode))\r\n\r\n  constructor(graph: Graph, startIndex: number) {\r\n    const queue: number[] = []\r\n    const visited: boolean[] = new Array(graph.Size).fill(false)\r\n    const distances: number[] = new Array(graph.Size).fill(Infinity)\r\n\r\n    this.steps.push(new IStep({ line: 0, queue, visited, distances }))\r\n\r\n    visited[startIndex] = true\r\n\r\n    this.steps.push(\r\n      new IStep({ line: BFSAlgorythm.mainCode, queue, visited, distances })\r\n    )\r\n\r\n    distances[startIndex] = 0\r\n\r\n    this.steps.push(\r\n      new IStep({ line: BFSAlgorythm.mainCode + 1, queue, visited, distances })\r\n    )\r\n\r\n    queue.push(startIndex)\r\n\r\n    this.steps.push(\r\n      new IStep({ line: BFSAlgorythm.mainCode + 2, queue, visited, distances })\r\n    )\r\n\r\n    while (queue.length !== 0) {\r\n      const first: number = queue.shift() as any\r\n\r\n      this.steps.push(\r\n        new IStep({\r\n          line: BFSAlgorythm.DeQueue,\r\n          queue,\r\n          visited,\r\n          distances,\r\n          first,\r\n        })\r\n      )\r\n\r\n      this.steps.push(\r\n        new IStep({\r\n          line: BFSAlgorythm.DeQueue + 1,\r\n          queue,\r\n          visited,\r\n          distances,\r\n          first,\r\n          markFirstInMatrix: true,\r\n        })\r\n      )\r\n\r\n      for (const neighbor of graph.getNeighbors(first)) {\r\n        this.steps.push(\r\n          new IStep({\r\n            line: BFSAlgorythm.ifNeighbor,\r\n            queue,\r\n            visited,\r\n            distances,\r\n            first,\r\n            markFirstInMatrix: true,\r\n            neighbor,\r\n          })\r\n        )\r\n\r\n        if (!visited[neighbor]) {\r\n          visited[neighbor] = true\r\n\r\n          this.steps.push(\r\n            new IStep({\r\n              line: BFSAlgorythm.visit,\r\n              queue,\r\n              visited,\r\n              distances,\r\n              first,\r\n              markFirstInMatrix: true,\r\n              neighbor,\r\n            })\r\n          )\r\n\r\n          distances[neighbor] = distances[first] + 1\r\n\r\n          this.steps.push(\r\n            new IStep({\r\n              line: BFSAlgorythm.visit + 1,\r\n              queue,\r\n              visited,\r\n              distances,\r\n              first,\r\n              markFirstInMatrix: true,\r\n              neighbor,\r\n            })\r\n          )\r\n\r\n          queue.push(neighbor)\r\n\r\n          this.steps.push(\r\n            new IStep({\r\n              line: BFSAlgorythm.visit + 2,\r\n              queue,\r\n              visited,\r\n              distances,\r\n              first,\r\n              markFirstInMatrix: true,\r\n              neighbor,\r\n            })\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React, { createContext, useState, useCallback } from 'react'\r\nimport Graph from '../Graph'\r\n\r\nexport interface IGraphContextValue {\r\n  graph: Graph\r\n  isGraphLoaded: boolean\r\n  deleteGraph: () => void\r\n  loadGraph: (graphAdjacencyMatrix: number[][]) => void\r\n}\r\n\r\nconst defaultValue: IGraphContextValue = {\r\n  graph: new Graph([]),\r\n  loadGraph: () => void 0,\r\n  isGraphLoaded: false,\r\n  deleteGraph: () => void 0,\r\n}\r\n\r\nexport const graphContext = createContext<IGraphContextValue>(defaultValue)\r\n\r\nconst { Provider } = graphContext\r\n\r\ninterface IGraphContextProviderProps {\r\n  children?: React.ReactNode\r\n}\r\n\r\nexport function GraphContextProvider({ children }: IGraphContextProviderProps) {\r\n  const [graph, setGraph] = useState(defaultValue.graph)\r\n  const [isGraphLoaded, setIsGraphLoaded] = useState(false)\r\n\r\n  const loadGraph = useCallback((graphAdjacencyMatrix: number[][]) => {\r\n    setIsGraphLoaded(true)\r\n    setGraph(new Graph(graphAdjacencyMatrix))\r\n  }, [])\r\n\r\n  const deleteGraph = useCallback(() => {\r\n    setIsGraphLoaded(false)\r\n    setGraph(defaultValue.graph)\r\n  }, [])\r\n\r\n  return <Provider value={{ graph, loadGraph, isGraphLoaded, deleteGraph }}>{children}</Provider>\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport classNames from 'classnames'\r\n\r\nexport const size = 4.5\r\nexport const mdSize = size * 0.8\r\nexport const xsSize = size * 0.6\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  position: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n    width: theme.spacing(size),\r\n    height: theme.spacing(size),\r\n    marginLeft: theme.spacing(0.5),\r\n    marginRight: theme.spacing(0.5),\r\n    lineHeight: `${theme.spacing(size)}px`,\r\n    background: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n    [theme.breakpoints.down('md')]: {\r\n      width: theme.spacing(mdSize),\r\n      height: theme.spacing(mdSize),\r\n      lineHeight: `${theme.spacing(mdSize)}px`,\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: theme.spacing(xsSize),\r\n      height: theme.spacing(xsSize),\r\n      lineHeight: `${theme.spacing(xsSize)}px`,\r\n    },\r\n    '&:hover': {\r\n      boxShadow: theme.shadows[4],\r\n    },\r\n  },\r\n  disabled: {\r\n    background: theme.palette.grey[500],\r\n  },\r\n}))\r\n\r\ninterface INodeBoxProps {\r\n  name: string\r\n  disabled?: boolean\r\n}\r\n\r\nexport default function NodeBox({ name, disabled }: INodeBoxProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper\r\n      elevation={2}\r\n      classes={{\r\n        root: classNames(classes.position, {\r\n          [classes.disabled]: disabled,\r\n        }),\r\n      }}\r\n    >\r\n      {name}\r\n    </Paper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport NodeBox, { size, mdSize, xsSize } from './NodeBox'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0.5),\r\n    paddingLeft: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  empty: {\r\n    fontWeight: 'bold',\r\n    verticalAlign: 'middle',\r\n    height: theme.spacing(size),\r\n    lineHeight: `${theme.spacing(size)}px`,\r\n    [theme.breakpoints.down('md')]: {\r\n      height: theme.spacing(mdSize),\r\n      lineHeight: `${theme.spacing(mdSize)}px`,\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: theme.spacing(xsSize),\r\n      lineHeight: `${theme.spacing(xsSize)}px`,\r\n    },\r\n  },\r\n  title: {\r\n    width: theme.spacing(16),\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  list: {\r\n    display: 'flex',\r\n  },\r\n}))\r\n\r\ninterface IListValue {\r\n  name: string\r\n  disabled?: boolean\r\n}\r\n\r\ninterface IListProps {\r\n  title: string\r\n  list: IListValue[]\r\n  emptyMessage?: string\r\n}\r\n\r\nexport default function List({ list, title, emptyMessage }: IListProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper elevation={3} classes={{ root: classes.root }}>\r\n      <Typography classes={{ root: classes.title }}>{title}</Typography>\r\n\r\n      {list.length === 0 ? (\r\n        <Typography color=\"primary\" classes={{ root: classes.empty }}>\r\n          {emptyMessage}\r\n        </Typography>\r\n      ) : null}\r\n\r\n      <div className={classes.list}>\r\n        {list.map(({ name, disabled }, i) => (\r\n          <NodeBox key={i} name={name} disabled={disabled} />\r\n        ))}\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport List from './List'\r\n\r\ninterface IVisitedProps {\r\n  distances: number[]\r\n}\r\n\r\nexport default function Distance({ distances }: IVisitedProps) {\r\n  return (\r\n    <List\r\n      title=\"Odległość\"\r\n      list={distances.map((dst, i) => ({\r\n        name: Number.isFinite(dst) ? dst.toString() : 'inf',\r\n      }))}\r\n    />\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nimport NodeBox from './NodeBox'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  spacer: {\r\n    width: theme.spacing(1),\r\n  },\r\n}))\r\n\r\ninterface IVariable {\r\n  name: string\r\n  value: string\r\n}\r\n\r\ninterface IVariablesProps {\r\n  variables: (IVariable | null)[]\r\n}\r\n\r\nexport default function Variables({ variables }: IVariablesProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {variables.map((variable) =>\r\n        variable !== null ? (\r\n          <Fragment key={variable.name}>\r\n            <p>{variable.name}: </p>\r\n\r\n            <NodeBox name={variable.value} />\r\n            <div className={classes.spacer} />\r\n          </Fragment>\r\n        ) : null\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport List from './List'\r\nimport Graph from '../../Graph'\r\n\r\ninterface IVisitedProps {\r\n  visited: boolean[]\r\n}\r\n\r\nexport default function Visited({ visited }: IVisitedProps) {\r\n  return (\r\n    <List\r\n      title=\"Odwiedzone\"\r\n      list={visited.map((vis, i) => ({\r\n        name: Graph.fromIndexToName(i),\r\n        disabled: !vis,\r\n      }))}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport List from './List'\r\n\r\ninterface IQueueProps {\r\n  queue: string[]\r\n}\r\n\r\nexport default function Queue({ queue }: IQueueProps) {\r\n  return (\r\n    <List\r\n      title=\"Kolejka\"\r\n      emptyMessage=\"Pusta\"\r\n      list={queue.map((name) => ({ name }))}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Select from '@material-ui/core/Select'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\r\n\r\nimport LastPageIcon from '@material-ui/icons/LastPage'\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\r\n\r\nimport Code from './Code'\r\nimport Matrix from './Matrix'\r\nimport EndInfo from './EndInfo'\r\nimport { BFSAlgorythm } from './BFSAlgorythm'\r\nimport useBFSAlgorithm from './useBFSAlgorithm'\r\nimport { Queue, Visited, Distance, Variables } from './Lists'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  navigation: {\r\n    display: 'flex',\r\n    marginTop: theme.spacing(2),\r\n    justifyContent: 'space-between',\r\n  },\r\n  navigationIcon: {\r\n    marginRight: theme.spacing(1),\r\n    marginLeft: theme.spacing(1),\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginRight: theme.spacing(0.5),\r\n      marginLeft: theme.spacing(0.5),\r\n    },\r\n  },\r\n  main: {\r\n    flex: 1,\r\n  },\r\n  step: {\r\n    marginTop: 'auto',\r\n    userSelect: 'none',\r\n    fontWeight: 'bold',\r\n  },\r\n  middle: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n  },\r\n  formControl: {\r\n    minWidth: theme.spacing(7),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  select: {\r\n    textAlign: 'center',\r\n  },\r\n  start: {\r\n    marginBottom: theme.spacing(1),\r\n    display: 'flex',\r\n  },\r\n  stepsReport: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  largeIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: 24,\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function BFS() {\r\n  const classes = useStyles()\r\n  const {\r\n    step,\r\n    start,\r\n    updateStart,\r\n    steps,\r\n    graph,\r\n    nextStep,\r\n    previusStep,\r\n    scrollToEnd,\r\n    currentStep,\r\n    finishStep,\r\n    correctLoaded,\r\n    scrollToBegining,\r\n  } = useBFSAlgorithm()\r\n\r\n  if (!correctLoaded) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className={classes.main}>\r\n        <div className={classes.start}>\r\n          <Typography variant=\"h6\">Wierzchołek startowy</Typography>\r\n\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              value={start}\r\n              onChange={updateStart}\r\n              classes={{ root: classes.select }}\r\n            >\r\n              {graph.mapNodes((name, index) => (\r\n                <MenuItem value={index} key={index}>\r\n                  {name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <Queue queue={currentStep.queue} />\r\n        <Visited visited={currentStep.visited} />\r\n        <Distance distances={currentStep.distances} />\r\n        <Variables\r\n          variables={[\r\n            currentStep.first.length !== 0\r\n              ? { name: 'Pierwszy', value: currentStep.first }\r\n              : null,\r\n            currentStep.neighbor.length !== 0\r\n              ? { name: 'Sąsiad', value: currentStep.neighbor }\r\n              : null,\r\n          ]}\r\n        />\r\n      </main>\r\n\r\n      <div className={classes.middle}>\r\n        <Code code={BFSAlgorythm.code} selectedLine={currentStep.line} />\r\n\r\n        <Matrix\r\n          graph={graph}\r\n          first={currentStep.firstIndex}\r\n          markFirst={currentStep.markFirstInMatrix}\r\n        />\r\n      </div>\r\n\r\n      <section className={classes.navigation}>\r\n        <div>\r\n          <IconButton\r\n            color=\"primary\"\r\n            disabled={step <= 0}\r\n            onClick={previusStep}\r\n            title=\"poprzedni krok\"\r\n            aria-label=\"poprzedni krok\"\r\n            classes={{ root: classes.navigationIcon }}\r\n          >\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              classes={{ fontSizeLarge: classes.largeIcon }}\r\n              color={step <= 0 ? 'disabled' : 'primary'}\r\n            />\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            color=\"primary\"\r\n            disabled={step <= 0}\r\n            onClick={scrollToBegining}\r\n            title=\"Przewiń do początku\"\r\n            aria-label=\"Przewiń do początku\"\r\n            classes={{ root: classes.navigationIcon }}\r\n          >\r\n            <FirstPageIcon\r\n              fontSize=\"large\"\r\n              classes={{ fontSizeLarge: classes.largeIcon }}\r\n              color={step <= 0 ? 'disabled' : 'primary'}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <div className={classes.stepsReport}>\r\n          <EndInfo\r\n            start={start}\r\n            end={finishStep}\r\n            openOnFirst={step + 1 === steps}\r\n          />\r\n\r\n          <Typography classes={{ root: classes.step }}>\r\n            Krok: {step + 1} / {steps}\r\n          </Typography>\r\n        </div>\r\n\r\n        <div>\r\n          <IconButton\r\n            color=\"primary\"\r\n            title=\"Przewiń do końca\"\r\n            onClick={scrollToEnd}\r\n            aria-label=\"Przewiń do końca\"\r\n            classes={{ root: classes.navigationIcon }}\r\n            disabled={step >= steps - 1}\r\n          >\r\n            <LastPageIcon\r\n              fontSize=\"large\"\r\n              classes={{ fontSizeLarge: classes.largeIcon }}\r\n              color={step >= steps - 1 ? 'disabled' : 'primary'}\r\n            />\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            color=\"primary\"\r\n            title=\"następny krok\"\r\n            onClick={nextStep}\r\n            aria-label=\"następny krok\"\r\n            classes={{ root: classes.navigationIcon }}\r\n            disabled={step >= steps - 1}\r\n          >\r\n            <ArrowForwardIcon\r\n              fontSize=\"large\"\r\n              classes={{ fontSizeLarge: classes.largeIcon }}\r\n              color={step >= steps - 1 ? 'disabled' : 'primary'}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useContext, useCallback, ChangeEvent } from 'react'\r\n\r\nimport { BFSAlgorythm } from './BFSAlgorythm'\r\nimport { graphContext } from '../GraphContext'\r\nimport { IStep } from './BFSAlgorythm'\r\n\r\nexport default function useBFSAlgorithm() {\r\n  const [step, setStep] = useState(0)\r\n  const [start, setStart] = useState(0)\r\n  const { graph, isGraphLoaded } = useContext(graphContext)\r\n  const [algotythm, setAlgorythm] = useState(new BFSAlgorythm(graph, start))\r\n\r\n  const updateStart = useCallback(\r\n    (event: ChangeEvent<{ value: any }>) => {\r\n      const newStart = parseInt(event.target.value)\r\n\r\n      if (newStart === start) return\r\n\r\n      setStep(0)\r\n      setStart(newStart)\r\n      setAlgorythm(new BFSAlgorythm(graph, newStart))\r\n    },\r\n    [start, graph]\r\n  )\r\n\r\n  const nextStep = useCallback(() => {\r\n    setStep((step) => (step >= algotythm.steps.length ? step : step + 1))\r\n  }, [algotythm])\r\n\r\n  const previusStep = useCallback(() => {\r\n    setStep((step) => (step <= 0 ? step : step - 1))\r\n  }, [])\r\n\r\n  const scrollToBegining = useCallback(() => {\r\n    setStep(0)\r\n  }, [])\r\n\r\n  const scrollToEnd = useCallback(() => {\r\n    setStep(Math.max(algotythm.steps.length - 1, 0))\r\n  }, [algotythm])\r\n\r\n  const correctLoaded = isGraphLoaded && algotythm.steps.length !== 0\r\n\r\n  const currentStep = correctLoaded ? algotythm.steps[step] : IStep.Empty\r\n\r\n  const steps = algotythm.steps.length\r\n\r\n  const finishStep = correctLoaded\r\n    ? algotythm.steps[algotythm.steps.length - 1]\r\n    : IStep.Empty\r\n\r\n  return {\r\n    step,\r\n    steps,\r\n    graph,\r\n    start,\r\n    nextStep,\r\n    finishStep,\r\n    updateStart,\r\n    previusStep,\r\n    scrollToEnd,\r\n    currentStep,\r\n    correctLoaded,\r\n    scrollToBegining,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  content: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  shortContent: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      textTransform: 'lowercase',\r\n    },\r\n  },\r\n}))\r\n\r\ninterface ITabLabelProps {\r\n  content: string\r\n  shortContent: string\r\n}\r\n\r\nexport default function TabLabel({ content, shortContent }: ITabLabelProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <span className={classes.content}>{content}</span>\r\n      <span className={classes.shortContent}>{shortContent}</span>\r\n    </>\r\n  )\r\n}\r\n","import React, { forwardRef } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  box: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    maxWidth: '100%',\r\n    flexDirection: 'column',\r\n  },\r\n})\r\n\r\ninterface TabPanelProps {\r\n  index: number\r\n  value: number\r\n  fullContent?: boolean\r\n  children?: React.ReactNode\r\n}\r\n\r\n/**\r\n * Displays TabPanel Content if value is equals index\r\n */\r\nconst TabPanel = forwardRef<HTMLDivElement, TabPanelProps>(\r\n  ({ children, value, index, fullContent = false }: TabPanelProps, ref) => {\r\n    const classess = useStyles()\r\n\r\n    const visable = value === index\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        role='tabpanel'\r\n        hidden={!visable}\r\n        className={visable ? classess.root : undefined}\r\n      >\r\n        {visable ? (\r\n          fullContent ? (\r\n            children\r\n          ) : (\r\n            <Box p={2} className={classess.box}>\r\n              {children}\r\n            </Box>\r\n          )\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default TabPanel\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n    width: 'fit-content',\r\n    margin: 'auto',\r\n    maxWidth: theme.breakpoints.values.sm,\r\n  },\r\n}))\r\n\r\nexport default function Topic() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper classes={{ root: classes.root }}>\r\n      <Typography variant='h4' gutterBottom>\r\n        Temat 6\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Korzystając z macierzy sąsiedztwa wierzchołków opracować i zaimplementować algorytm\r\n        obliczania odległości pomiędzy dowolnymi wierzchołkami w grafie spójnym skierowanym.\r\n      </Typography>\r\n    </Paper>\r\n  )\r\n}\r\n","export default function GraphToString(grapth: number[][], separator = ' ') {\r\n  return `[\\n${separator}[ ${grapth.map((sub) => sub.join(', ')).join(` ],\\n${separator}[ `)} ]\\n]`\r\n}\r\n","export interface IAvailableGraph {\r\n  name: string\r\n  graph: number[][]\r\n}\r\n\r\nconst randomGraph = (n: number, successRatio = 0.2) =>\r\n  Array(n)\r\n    .fill(0)\r\n    .map((_, i) =>\r\n      Array(n)\r\n        .fill(0)\r\n        .map((_, j) => (i === j || Math.random() >= successRatio ? 0 : 1))\r\n    )\r\n\r\nconst buildInGraphs: IAvailableGraph[] = [\r\n  {\r\n    name: 'Klasyka gatunku graf z Wikipedii',\r\n    graph: [\r\n      [0, 1, 0, 0, 1, 0],\r\n      [0, 0, 1, 0, 1, 0],\r\n      [0, 0, 0, 1, 0, 0],\r\n      [0, 0, 0, 0, 1, 1],\r\n      [0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0],\r\n    ],\r\n  },\r\n  {\r\n    name: 'Nieco bardziej skomplikowany graf',\r\n    graph: [\r\n      [0, 0, 1, 1, 0],\r\n      [1, 0, 1, 1, 1],\r\n      [0, 1, 0, 1, 1],\r\n      [1, 0, 0, 0, 1],\r\n      [1, 0, 0, 0, 0],\r\n    ],\r\n  },\r\n  {\r\n    name: '3 wierzchołkowy wielokąt foremny',\r\n    graph: [\r\n      [0, 1, 1],\r\n      [1, 0, 1],\r\n      [1, 1, 0],\r\n    ],\r\n  },\r\n  {\r\n    name: 'Losowy graf 5 wierzchołków',\r\n    graph: randomGraph(5, 0.5),\r\n  },\r\n  {\r\n    name: 'Losowy graf 10 wierzchołków',\r\n    graph: randomGraph(10, 0.2),\r\n  },\r\n  {\r\n    name: 'Losowy graf 20 wierzchołków',\r\n    graph: randomGraph(20, 0.12),\r\n  },\r\n]\r\n\r\nconst userGraphs: IAvailableGraph[] = []\r\n\r\n;(() => {\r\n  const userGraphsLocalStorage = localStorage.getItem('userGraphs')\r\n\r\n  if (userGraphsLocalStorage !== null) {\r\n    try {\r\n      userGraphs.push(\r\n        ...(JSON.parse(userGraphsLocalStorage) as IAvailableGraph[])\r\n      )\r\n    } catch {}\r\n  }\r\n})()\r\n\r\nconst availableGraphs: IAvailableGraph[] = [...buildInGraphs, ...userGraphs]\r\n\r\nexport function addNewDefaultGraph(\r\n  graph: number[][],\r\n  name = `Twój graf ${new Date().toLocaleDateString(undefined, {\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n  })}`\r\n) {\r\n  const newGraph: IAvailableGraph = { name, graph }\r\n\r\n  userGraphs.push(newGraph)\r\n  availableGraphs.push(newGraph)\r\n\r\n  localStorage.setItem('userGraphs', JSON.stringify(userGraphs))\r\n}\r\n\r\nexport default availableGraphs\r\n","export default function CheckGraphMatrixStringReprezentation(text: string) {\r\n  if (text.length === 0) {\r\n    return 'Macierz musi zawierać min 1 wierzchołek'\r\n  }\r\n\r\n  try {\r\n    const obj: any = JSON.parse(text)\r\n\r\n    if (!Array.isArray(obj)) {\r\n      return 'JSON: Macierz musi być dwuwymiarową tablicą liczb (number[][])'\r\n    }\r\n\r\n    const length = obj.length\r\n\r\n    for (const sub of obj) {\r\n      if (!Array.isArray(sub)) {\r\n        return 'JSON: Macierz musi być dwuwymiarową tablicą liczb'\r\n      }\r\n\r\n      if (sub.length !== length) {\r\n        return 'JSON: Macierz musi być dwuwymiarową kwadratową tablicą liczb'\r\n      }\r\n\r\n      for (const nb of sub) {\r\n        const val = parseInt(nb)\r\n\r\n        if (Number.isNaN(val)) {\r\n          return 'JSON: Macierz musi być dwuwymiarową tablicą liczb'\r\n        }\r\n\r\n        if (val !== 0 && val !== 1) {\r\n          return 'Wartości macierzy mogą być tylko 0 lub 1'\r\n        }\r\n      }\r\n    }\r\n  } catch {\r\n    return 'Macierz w nieprawidłowym formacie'\r\n  }\r\n\r\n  return null\r\n}\r\n","import { useState, useCallback, ChangeEvent } from 'react'\r\n\r\nimport parseGraph from './parseGraph'\r\nimport GraphToString from './GraphToString'\r\nimport aviableGraphs, { addNewDefaultGraph } from './defaultGraphs'\r\nimport CheckGraphMatrixStringReprezentation from './CheckGraphMatrixStringReprezentation'\r\n\r\nexport default function useNewGraph(\r\n  addNewGraph: (graphAdjacencyMatrix: number[][]) => void\r\n) {\r\n  const [selectedDefaultGraph, setSelectedDefaultGraph] = useState(0)\r\n  const [text, setText] = useState(\r\n    GraphToString(aviableGraphs[selectedDefaultGraph].graph)\r\n  )\r\n  const [textError, setTextError] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const handleSelectChange = useCallback(\r\n    (event: ChangeEvent<{ value: any }>) => {\r\n      const id: number = parseInt(event.target.value)\r\n\r\n      setSelectedDefaultGraph(id)\r\n      setText(GraphToString(aviableGraphs[id].graph))\r\n      setTextError(false)\r\n    },\r\n    []\r\n  )\r\n\r\n  const useDefaultGraph = useCallback(() => {\r\n    addNewGraph(aviableGraphs[selectedDefaultGraph].graph)\r\n  }, [selectedDefaultGraph, addNewGraph])\r\n\r\n  const handleChange = useCallback(\r\n    (event: ChangeEvent<{ value: any }>) => {\r\n      const content: string = event.target.value\r\n\r\n      if (textError) {\r\n        const err = CheckGraphMatrixStringReprezentation(content)\r\n\r\n        if (err === null) {\r\n          setTextError(false)\r\n        }\r\n      }\r\n\r\n      setText(content)\r\n    },\r\n    [textError]\r\n  )\r\n\r\n  const handleBlur = useCallback(() => {\r\n    const err = CheckGraphMatrixStringReprezentation(text)\r\n\r\n    setTextError(err !== null)\r\n    setErrorMessage(err || '')\r\n  }, [text])\r\n\r\n  const handleUseButton = useCallback(() => {\r\n    if (textError || CheckGraphMatrixStringReprezentation(text) !== null) return\r\n\r\n    const newGraph = parseGraph(text)\r\n\r\n    addNewDefaultGraph(newGraph)\r\n    addNewGraph(newGraph)\r\n  }, [textError, text, addNewGraph])\r\n\r\n  return {\r\n    text,\r\n    textError,\r\n    handleBlur,\r\n    handleChange,\r\n    errorMessage,\r\n    handleUseButton,\r\n    useDefaultGraph,\r\n    handleSelectChange,\r\n    selectedDefaultGraph,\r\n  }\r\n}\r\n","export default function parseGraph(str: string) {\r\n  return (JSON.parse(str) as string[][]).map((sub) => sub.map((nb) => parseInt(nb)))\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nimport Topic from './Topic'\r\nimport useNewGraph from './useNewGraph'\r\nimport aviableGraphs from './defaultGraphs'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  section: {\r\n    maxWidth: theme.breakpoints.values.md,\r\n    margin: `${theme.spacing(2)}px auto`,\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 512,\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  select: {\r\n    '&:focus': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  buttonList: {\r\n    marginLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(5),\r\n    paddingLeft: theme.spacing(5),\r\n    marginTop: theme.spacing(1),\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginTop: theme.spacing(2),\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonText: {\r\n    marginTop: theme.spacing(4),\r\n    paddingRight: theme.spacing(5),\r\n    paddingLeft: theme.spacing(5),\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  textArea: {\r\n    minHeight: 200,\r\n  },\r\n}))\r\n\r\ninterface IPropsNewGraph {\r\n  addNewGraph: (graphAdjacencyMatrix: number[][]) => void\r\n}\r\n\r\nexport default function NewGraph({ addNewGraph }: IPropsNewGraph) {\r\n  const classes = useStyles()\r\n  const {\r\n    text,\r\n    handleBlur,\r\n    handleUseButton,\r\n    handleChange,\r\n    useDefaultGraph,\r\n    handleSelectChange,\r\n    errorMessage,\r\n    textError,\r\n    selectedDefaultGraph,\r\n  } = useNewGraph(addNewGraph)\r\n\r\n  return (\r\n    <div>\r\n      <Topic />\r\n\r\n      <section className={classes.section}>\r\n        <Typography variant=\"h6\">\r\n          1. Wybierz jeden z domyślnie dostępnych grafów\r\n        </Typography>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <Select\r\n            value={selectedDefaultGraph}\r\n            onChange={handleSelectChange}\r\n            classes={{ root: classes.select }}\r\n          >\r\n            {aviableGraphs.map(({ name }, id) => (\r\n              <MenuItem value={id} key={id}>\r\n                {name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          classes={{ root: classes.buttonList }}\r\n          onClick={useDefaultGraph}\r\n        >\r\n          Użyj\r\n        </Button>\r\n      </section>\r\n\r\n      <section className={classes.section}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          2. Wprowadź swój graf za pomocą macierzy sąsiedztwa\r\n        </Typography>\r\n\r\n        <Typography>Format dwuwymiarowa tablica JSON</Typography>\r\n\r\n        <TextField\r\n          multiline\r\n          error={textError}\r\n          variant=\"outlined\"\r\n          onBlur={handleBlur}\r\n          value={text}\r\n          onChange={handleChange}\r\n          placeholder=\"Macierz sąsiedztwa ...\"\r\n          classes={{ root: classes.textField }}\r\n          label={textError ? errorMessage : undefined}\r\n          inputProps={{ className: classes.textArea }}\r\n        />\r\n\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          disabled={textError}\r\n          onClick={handleUseButton}\r\n          classes={{ root: classes.buttonText }}\r\n        >\r\n          Użyj\r\n        </Button>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState, useContext, RefObject } from 'react'\r\nimport grey from '@material-ui/core/colors/grey'\r\nimport indigo from '@material-ui/core/colors/indigo'\r\nimport { Network, Options, Data } from 'vis'\r\n\r\nimport { graphContext } from '../GraphContext'\r\n\r\nconst options: Options = {\r\n  nodes: {\r\n    shape: 'dot',\r\n    size: 30,\r\n    font: {\r\n      size: 28,\r\n      color: grey[800],\r\n    },\r\n    color: indigo[700],\r\n    borderWidth: 2,\r\n  },\r\n  edges: {\r\n    width: 2,\r\n    arrows: {\r\n      to: true,\r\n    },\r\n    length: 1.2 * 256,\r\n  },\r\n  autoResize: true,\r\n  height: '100vw',\r\n  width: '100vh',\r\n  locale: 'pl',\r\n}\r\n\r\ninterface IGraphPresentationProps {\r\n  containerRef: RefObject<HTMLDivElement>\r\n}\r\n\r\nexport default function GraphPresentation({ containerRef }: IGraphPresentationProps) {\r\n  const [network, setNetwork] = useState<Network | null>(null)\r\n  const { isGraphLoaded, graph } = useContext(graphContext)\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current !== null && network === null && isGraphLoaded) {\r\n      const data: Data = {\r\n        nodes: graph.getNodes(),\r\n        edges: graph.getEdges(),\r\n      }\r\n\r\n      const width = `${containerRef.current.offsetWidth}px`\r\n      const height = `${containerRef.current.offsetHeight}px`\r\n\r\n      const newNetwork = new Network(containerRef.current, data, { ...options, width, height })\r\n\r\n      setNetwork(newNetwork)\r\n    }\r\n\r\n    return () => {\r\n      if (network !== null) {\r\n        network.destroy()\r\n        setNetwork(null)\r\n      }\r\n    }\r\n  }, [containerRef, isGraphLoaded, graph, network])\r\n\r\n  return <></>\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\n\r\nimport BFS from '../BFS'\r\nimport TabLabel from './TabLabel'\r\nimport TabPanel from './TabPanel'\r\nimport NewGraph from '../NewGraph'\r\nimport useNavigation from './useNavigation'\r\nimport GraphPresentation from '../GraphPresentation'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingRight: theme.spacing(5),\r\n      paddingLeft: theme.spacing(5),\r\n    },\r\n    maxWidth: 'max-content',\r\n  },\r\n}))\r\n\r\nexport default function Navigation() {\r\n  const classes = useStyles()\r\n  const networkTabPanelRef = useRef<HTMLDivElement>(null)\r\n  const { openTab, addNewGraph, handleChange, isGraphLoaded } = useNavigation()\r\n\r\n  return (\r\n    <>\r\n      <Paper color=\"default\" square>\r\n        <Tabs\r\n          centered\r\n          value={openTab}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n        >\r\n          <Tab\r\n            label={\r\n              <TabLabel\r\n                content=\"Wprowadzanie grafu\"\r\n                shortContent=\"Wprowadzanie\"\r\n              />\r\n            }\r\n            classes={{ root: classes.tab }}\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <TabLabel\r\n                content=\"Znajdowanie odległości\"\r\n                shortContent=\"Odległości\"\r\n              />\r\n            }\r\n            classes={{ root: classes.tab }}\r\n            disabled={!isGraphLoaded}\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <TabLabel\r\n                content=\"Prezentacja grafu\"\r\n                shortContent=\"Prezentacja\"\r\n              />\r\n            }\r\n            classes={{ root: classes.tab }}\r\n            disabled={!isGraphLoaded}\r\n          />\r\n        </Tabs>\r\n      </Paper>\r\n\r\n      <TabPanel value={openTab} index={0}>\r\n        <NewGraph addNewGraph={addNewGraph} />\r\n      </TabPanel>\r\n\r\n      <TabPanel value={openTab} index={1}>\r\n        <BFS />\r\n      </TabPanel>\r\n\r\n      <TabPanel value={openTab} index={2} fullContent ref={networkTabPanelRef}>\r\n        <GraphPresentation containerRef={networkTabPanelRef} />\r\n      </TabPanel>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useContext, useCallback } from 'react'\r\n\r\nimport { graphContext } from '../GraphContext'\r\n\r\nexport default function useNavigation() {\r\n  const [openTab, setOpenTabId] = useState(0)\r\n  const { isGraphLoaded, loadGraph, deleteGraph } = useContext(graphContext)\r\n\r\n  const handleChange = useCallback(\r\n    (_, id: number) => {\r\n      if (id === 0) deleteGraph()\r\n\r\n      setOpenTabId(id)\r\n    },\r\n    [deleteGraph]\r\n  )\r\n\r\n  const addNewGraph = useCallback(\r\n    (graphAdjacencyMatrix: number[][]) => {\r\n      loadGraph(graphAdjacencyMatrix)\r\n      setOpenTabId(1)\r\n    },\r\n    [loadGraph]\r\n  )\r\n\r\n  return {\r\n    openTab,\r\n    addNewGraph,\r\n    handleChange,\r\n    isGraphLoaded,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\n\r\nimport Header from './Header'\r\nimport Navigation from './Navigation'\r\nimport { GraphContextProvider } from './GraphContext'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    maxWidth: '100vw',\r\n    overflow: 'hidden',\r\n    minHeight: '100vh',\r\n    flexDirection: 'column',\r\n  },\r\n})\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <CssBaseline>\r\n      <GraphContextProvider>\r\n        <div className={classes.root}>\r\n          <Header />\r\n\r\n          <Navigation />\r\n        </div>\r\n      </GraphContextProvider>\r\n    </CssBaseline>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.53c2e8c0.png\";"],"sourceRoot":""}