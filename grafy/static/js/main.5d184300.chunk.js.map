{"version":3,"sources":["Header/Header.tsx","BFS/Code.tsx","BFS/Matrix/MatrixContainer.tsx","BFS/Matrix/Matrix.tsx","Graph/Graph.ts","BFS/BFSAlgorythm.ts","GraphContext/GraphContext.tsx","BFS/Lists/NodeBox.tsx","BFS/Lists/List.tsx","BFS/Lists/Distance.tsx","BFS/Lists/Variables.tsx","BFS/Lists/Visited.tsx","BFS/Lists/Queue.tsx","BFS/BFS.tsx","BFS/useBFSAlgorithm.tsx","Navigation/TabLabel.tsx","Navigation/TabPanel.tsx","NewGraph/Topic.tsx","NewGraph/GraphToString.ts","NewGraph/defaultGraphs.ts","NewGraph/CheckGraphMatrixStringReprezentation.ts","NewGraph/useNewGraph.tsx","NewGraph/parseGraph.ts","NewGraph/NewGraph.tsx","GraphPresentation/GraphPresentation.tsx","Navigation/Navigation.tsx","Navigation/useNavigation.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","AppBar","position","Toolbar","Typography","variant","color","useStyles","makeStyles","theme","root","background","palette","grey","common","white","maxWidth","overflow","margin","spacing","padding","width","line","display","breakpoints","down","fontSize","typography","pxToRem","backgroundColor","lineNb","fontWeight","textAlign","primary","main","paddingRight","lineContent","paddingLeft","whiteSpace","indentation","minWidth","borderLeft","Code","code","selectedLine","classes","lineNbStyle","Math","floor","log10","length","Paper","map","i","id","content","key","className","style","Array","fill","_","h5","border","endings","justifyContent","top","height","left","right","container","MatrixContainer","children","row","selectedRow","col","lineHeight","Matrix","graph","first","markFirst","mapColumns","classNames","value","j","A","charCodeAt","Z","Graph","adjMatrix","adjacencyMatrix","this","rowMap","colMap","nodes","push","label","fromIndexToName","edges","from","to","index","Size","neighbors","toString","String","fromCharCode","Copy","arr","slice","IStep","queue","visited","distances","markFirstInMatrix","neighbor","firstIndex","Empty","BFSAlgorythm","startIndex","steps","Infinity","mainCode","shift","DeQueue","getNeighbors","ifNeighbor","visit","defaultValue","loadGraph","isGraphLoaded","deleteGraph","graphContext","createContext","Provider","GraphContextProvider","useState","setGraph","setIsGraphLoaded","useCallback","graphAdjacencyMatrix","verticalAlign","marginLeft","marginRight","contrastText","size","boxShadow","shadows","disabled","NodeBox","name","elevation","flexWrap","alignItems","marginBottom","empty","title","marginTop","list","List","emptyMessage","Distance","dst","Number","isFinite","spacer","Variables","variables","variable","Visited","vis","Queue","navigation","navigationIcon","flex","step","userSelect","middle","BFS","algotythm","setAlgorythm","setStep","useContext","nextStep","previusStep","scrollToBegining","scrollToEnd","max","correctLoaded","currentStep","useBFSAlgorithm","IconButton","onClick","aria-label","shortContent","up","textTransform","TabLabel","box","flexDirection","TabPanel","forwardRef","ref","fullContent","classess","visable","role","hidden","undefined","Box","p","values","sm","Topic","gutterBottom","GraphToString","grapth","separator","sub","join","userGraphs","userGraphsLocalStorage","localStorage","getItem","JSON","parse","availableGraphs","CheckGraphMatrixStringReprezentation","text","obj","isArray","nb","val","parseInt","isNaN","useNewGraph","addNewGraph","selectedDefaultGraph","setSelectedDefaultGraph","aviableGraphs","setText","textError","setTextError","errorMessage","setErrorMessage","handleSelectChange","event","target","useDefaultGraph","handleChange","handleBlur","err","handleUseButton","str","newGraph","Date","toLocaleDateString","hour","minute","setItem","stringify","addNewDefaultGraph","section","md","formControl","select","buttonList","buttonText","textField","textArea","minHeight","NewGraph","FormControl","Select","onChange","MenuItem","Button","TextField","multiline","error","onBlur","placeholder","inputProps","options","shape","font","indigo","borderWidth","arrows","autoResize","locale","GraphPresentation","containerRef","network","setNetwork","useEffect","current","data","getNodes","getEdges","offsetWidth","offsetHeight","newNetwork","Network","destroy","tab","Navigation","networkTabPanelRef","useRef","openTab","setOpenTabId","useNavigation","square","Tabs","centered","indicatorColor","Tab","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5d184300.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport default function Header() {\r\n  return (\r\n    <AppBar position='static'>\r\n      <Toolbar>\r\n        <Typography variant='h6' color='inherit'>\r\n          Kamil Mikołajczuk - Grafy i Sieci\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nexport interface ICode {\r\n  id: number\r\n  content: string\r\n  indentation: number\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    '& ::selection': {\r\n      background: theme.palette.grey[500],\r\n      color: theme.palette.common.white,\r\n    },\r\n    maxWidth: '100%',\r\n    overflow: 'hidden',\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    width: 'fit-content',\r\n    color: theme.palette.grey[800],\r\n  },\r\n  line: {\r\n    display: 'flex',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: theme.typography.pxToRem(theme.typography.fontSize * 0.8),\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[100],\r\n    },\r\n  },\r\n  lineNb: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'right',\r\n    color: theme.palette.primary.main,\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  lineContent: {\r\n    paddingLeft: 4,\r\n    whiteSpace: 'nowrap',\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  indentation: {\r\n    minWidth: theme.spacing(1.5),\r\n    borderLeft: `1px solid ${theme.palette.grey[300]}`,\r\n  },\r\n}))\r\n\r\ninterface ICodeProps {\r\n  code: ICode[]\r\n  selectedLine: number\r\n}\r\n\r\nexport default function Code({ code, selectedLine }: ICodeProps) {\r\n  const classes = useStyles()\r\n\r\n  const lineNbStyle = {\r\n    minWidth: `${Math.floor(Math.log10(code.length) + 1)}em`,\r\n  }\r\n\r\n  return (\r\n    <Paper classes={{ root: classes.root }}>\r\n      {code.map(({ id, content, indentation }, i) => (\r\n        <div key={id} className={classes.line}>\r\n          <div className={classes.lineNb} style={lineNbStyle}>\r\n            {i + 1}\r\n          </div>\r\n\r\n          {Array(indentation)\r\n            .fill(0)\r\n            .map((_, i) => (\r\n              <div key={i} className={classes.indentation} />\r\n            ))}\r\n\r\n          <div\r\n            style={{\r\n              fontWeight: id === selectedLine ? 'bold' : 'normal',\r\n            }}\r\n            className={classes.lineContent}\r\n          >\r\n            {content}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </Paper>\r\n  )\r\n}\r\n","import React, { ReactNode } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: 'min-content',\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    fontSize: theme.typography.h5.fontSize,\r\n  },\r\n  border: {\r\n    width: 4,\r\n    backgroundColor: theme.palette.grey[900],\r\n  },\r\n  endings: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    '&:before, &:after': {\r\n      top: 0,\r\n      width: 16,\r\n      height: 4,\r\n      content: '\"\"',\r\n      display: 'block',\r\n      backgroundColor: theme.palette.grey[900],\r\n    },\r\n    '&:before': {\r\n      left: 0,\r\n    },\r\n    '&:after': {\r\n      right: 0,\r\n    },\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n  },\r\n  main: {\r\n    margin: 2,\r\n  },\r\n}))\r\n\r\ninterface IMatrixContainerProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport default function MatrixContainer({ children }: IMatrixContainerProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper classes={{ root: classes.root }}>\r\n      <div className={classes.endings} />\r\n\r\n      <div className={classes.container}>\r\n        <div className={classes.border} />\r\n\r\n        <div className={classes.main}>{children}</div>\r\n\r\n        <div className={classes.border} />\r\n      </div>\r\n\r\n      <div className={classes.endings} />\r\n    </Paper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport classNames from 'classnames'\r\n\r\nimport Graph from '../../Graph'\r\nimport MatrixContainer from './MatrixContainer'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  row: {\r\n    display: 'flex',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[100],\r\n    },\r\n  },\r\n  selectedRow: {\r\n    fontWeight: 'bold',\r\n  },\r\n  col: {\r\n    width: '1em',\r\n    height: ' 1em',\r\n    lineHeight: '1em',\r\n    textAlign: 'center',\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}))\r\n\r\ninterface IMatrixProps {\r\n  graph: Graph\r\n  first: number\r\n  markFirst: boolean\r\n}\r\n\r\nexport default function Matrix({ graph, first, markFirst }: IMatrixProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <MatrixContainer>\r\n      {graph.map((mapColumns, i) => (\r\n        <div\r\n          key={i}\r\n          className={classNames(classes.row, {\r\n            [classes.selectedRow]: markFirst && first === i,\r\n          })}\r\n        >\r\n          {mapColumns((value, j) => (\r\n            <div key={j} className={classes.col}>\r\n              {value}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </MatrixContainer>\r\n  )\r\n}\r\n","import { Edge, Node } from 'vis'\r\n\r\nconst A = 'A'.charCodeAt(0)\r\nconst Z = 'Z'.charCodeAt(0)\r\n\r\ntype ColMap<T> = (value: number, j: number) => T\r\ntype RowMap<T, R> = (map: (colMap: ColMap<R>) => R[], i: number) => T\r\n\r\nexport default class Graph {\r\n  private adjacencyMatrix: number[][]\r\n\r\n  public get Size() {\r\n    return this.adjacencyMatrix.length\r\n  }\r\n\r\n  constructor(adjMatrix: number[][]) {\r\n    this.adjacencyMatrix = adjMatrix\r\n  }\r\n\r\n  public map<T, R>(rowMap: RowMap<T, R>) {\r\n    return this.adjacencyMatrix.map((row, i) =>\r\n      rowMap((colMap) => row.map((value, j) => colMap(value, j)), i)\r\n    )\r\n  }\r\n\r\n  public getNodes() {\r\n    const nodes: Node[] = []\r\n\r\n    for (let i = 0; i < this.adjacencyMatrix.length; i++) {\r\n      nodes.push({ id: i, label: Graph.fromIndexToName(i) })\r\n    }\r\n\r\n    return nodes\r\n  }\r\n\r\n  public getEdges() {\r\n    const edges: Edge[] = []\r\n\r\n    for (let from = 0; from < this.adjacencyMatrix.length; from++) {\r\n      for (let to = 0; to < this.adjacencyMatrix.length; to++) {\r\n        if (this.adjacencyMatrix[from][to] !== 0) {\r\n          edges.push({ from, to })\r\n        }\r\n      }\r\n    }\r\n\r\n    return edges\r\n  }\r\n\r\n  public getNeighbors(index: number) {\r\n    if (index < 0 || index >= this.Size) return []\r\n\r\n    const neighbors: number[] = []\r\n\r\n    for (let to = 0; to < this.adjacencyMatrix.length; to++) {\r\n      if (this.adjacencyMatrix[index][to] !== 0) {\r\n        neighbors.push(to)\r\n      }\r\n    }\r\n\r\n    return neighbors\r\n  }\r\n\r\n  public static fromIndexToName(index: number) {\r\n    return index + A > Z ? index.toString() : String.fromCharCode(index + A)\r\n  }\r\n}\r\n","import Graph from '../Graph'\r\n\r\nimport { ICode } from './Code'\r\n\r\nfunction Copy<T>(arr: T[]) {\r\n  return arr.slice(0)\r\n}\r\n\r\ninterface IStepParams {\r\n  line: number\r\n  queue: number[]\r\n  visited: boolean[]\r\n  distances: number[]\r\n  first?: number\r\n  markFirstInMatrix?: boolean\r\n  neighbor?: number\r\n}\r\n\r\nexport class IStep {\r\n  public queue: string[]\r\n  public visited: boolean[]\r\n  public distances: number[]\r\n\r\n  public line: number\r\n  public first: string\r\n  public neighbor: string\r\n  public firstIndex: number\r\n  public markFirstInMatrix: boolean\r\n\r\n  public static Empty = new IStep({\r\n    line: -1,\r\n    queue: [],\r\n    visited: [],\r\n    distances: [],\r\n  })\r\n\r\n  constructor({\r\n    line,\r\n    queue,\r\n    visited,\r\n    distances,\r\n    first = -1,\r\n    markFirstInMatrix = false,\r\n    neighbor = -1,\r\n  }: IStepParams) {\r\n    this.queue = queue.map((id) => Graph.fromIndexToName(id))\r\n    this.visited = Copy(visited)\r\n    this.distances = Copy(distances)\r\n    this.line = line\r\n    this.firstIndex = first\r\n    this.first = first < 0 ? '' : Graph.fromIndexToName(first)\r\n    this.markFirstInMatrix = markFirstInMatrix\r\n    this.neighbor = neighbor < 0 ? '' : Graph.fromIndexToName(neighbor)\r\n  }\r\n}\r\n\r\nexport class BFSAlgorythm {\r\n  public steps: IStep[] = []\r\n\r\n  private static readonly mainCode = 2\r\n  private static readonly DeQueue = 8\r\n  private static readonly ifNeighbor = 11\r\n  private static readonly visit = 13\r\n\r\n  // [indentation, content]\r\n  public static readonly code: ICode[] = [\r\n    [\r\n      0,\r\n      'Odwiedzone[...] = NIE; Odległość[...] = Nieskończoność; Kolejka = Pusta',\r\n    ],\r\n    [0, ''],\r\n    // 2\r\n    [0, 'Odwiedzone[Startowy] = TAK'],\r\n    [0, 'Odległość[Startowy] = 0'],\r\n    [0, 'Kolejka.Wstaw(Startowy)'],\r\n    [0, ''],\r\n    [0, 'Dopuki Kolejka nie jest pusta'],\r\n    [0, ''],\r\n    // 8\r\n    [1, 'Pierwszy = Kolejka.Następny()'],\r\n    [1, \"Dla każdego Sąsiad'a wierzchołka Pierwszy\"],\r\n    [1, ''],\r\n    // 11\r\n    [2, 'Jeżeli Odwiedzone[Sąsiad] == NIE'],\r\n    [2, ''],\r\n    // 13\r\n    [3, 'Odwiedzone[Sąsiad] = TAK'],\r\n    [3, 'Odległość[Sąsiad] = Odległosć[Pierwszy] + 1'],\r\n    [3, 'Kolejka.Wstaw(Sąsiad)'],\r\n  ].map(([indentation, content], id) => ({ id, content, indentation } as ICode))\r\n\r\n  constructor(graph: Graph, startIndex: number) {\r\n    const queue: number[] = []\r\n    const visited: boolean[] = new Array(graph.Size).fill(false)\r\n    const distances: number[] = new Array(graph.Size).fill(Infinity)\r\n\r\n    this.steps.push(new IStep({ line: 0, queue, visited, distances }))\r\n\r\n    visited[startIndex] = true\r\n\r\n    this.steps.push(\r\n      new IStep({ line: BFSAlgorythm.mainCode, queue, visited, distances })\r\n    )\r\n\r\n    distances[startIndex] = 0\r\n\r\n    this.steps.push(\r\n      new IStep({ line: BFSAlgorythm.mainCode + 1, queue, visited, distances })\r\n    )\r\n\r\n    queue.push(startIndex)\r\n\r\n    this.steps.push(\r\n      new IStep({ line: BFSAlgorythm.mainCode + 2, queue, visited, distances })\r\n    )\r\n\r\n    while (queue.length !== 0) {\r\n      const first: number = queue.shift() as any\r\n\r\n      this.steps.push(\r\n        new IStep({\r\n          line: BFSAlgorythm.DeQueue,\r\n          queue,\r\n          visited,\r\n          distances,\r\n          first,\r\n        })\r\n      )\r\n\r\n      this.steps.push(\r\n        new IStep({\r\n          line: BFSAlgorythm.DeQueue + 1,\r\n          queue,\r\n          visited,\r\n          distances,\r\n          first,\r\n          markFirstInMatrix: true,\r\n        })\r\n      )\r\n\r\n      for (const neighbor of graph.getNeighbors(first)) {\r\n        this.steps.push(\r\n          new IStep({\r\n            line: BFSAlgorythm.ifNeighbor,\r\n            queue,\r\n            visited,\r\n            distances,\r\n            first,\r\n            markFirstInMatrix: true,\r\n            neighbor,\r\n          })\r\n        )\r\n\r\n        if (!visited[neighbor]) {\r\n          visited[neighbor] = true\r\n\r\n          this.steps.push(\r\n            new IStep({\r\n              line: BFSAlgorythm.visit,\r\n              queue,\r\n              visited,\r\n              distances,\r\n              first,\r\n              markFirstInMatrix: true,\r\n              neighbor,\r\n            })\r\n          )\r\n\r\n          distances[neighbor] = distances[first] + 1\r\n\r\n          this.steps.push(\r\n            new IStep({\r\n              line: BFSAlgorythm.visit + 1,\r\n              queue,\r\n              visited,\r\n              distances,\r\n              first,\r\n              markFirstInMatrix: true,\r\n              neighbor,\r\n            })\r\n          )\r\n\r\n          queue.push(neighbor)\r\n\r\n          this.steps.push(\r\n            new IStep({\r\n              line: BFSAlgorythm.visit + 2,\r\n              queue,\r\n              visited,\r\n              distances,\r\n              first,\r\n              markFirstInMatrix: true,\r\n              neighbor,\r\n            })\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React, { createContext, useState, useCallback } from 'react'\r\nimport Graph from '../Graph'\r\n\r\nexport interface IGraphContextValue {\r\n  graph: Graph\r\n  isGraphLoaded: boolean\r\n  deleteGraph: () => void\r\n  loadGraph: (graphAdjacencyMatrix: number[][]) => void\r\n}\r\n\r\nconst defaultValue: IGraphContextValue = {\r\n  graph: new Graph([]),\r\n  loadGraph: () => void 0,\r\n  isGraphLoaded: false,\r\n  deleteGraph: () => void 0,\r\n}\r\n\r\nexport const graphContext = createContext<IGraphContextValue>(defaultValue)\r\n\r\nconst { Provider } = graphContext\r\n\r\ninterface IGraphContextProviderProps {\r\n  children?: React.ReactNode\r\n}\r\n\r\nexport function GraphContextProvider({ children }: IGraphContextProviderProps) {\r\n  const [graph, setGraph] = useState(defaultValue.graph)\r\n  const [isGraphLoaded, setIsGraphLoaded] = useState(false)\r\n\r\n  const loadGraph = useCallback((graphAdjacencyMatrix: number[][]) => {\r\n    setIsGraphLoaded(true)\r\n    setGraph(new Graph(graphAdjacencyMatrix))\r\n  }, [])\r\n\r\n  const deleteGraph = useCallback(() => {\r\n    setIsGraphLoaded(false)\r\n    setGraph(defaultValue.graph)\r\n  }, [])\r\n\r\n  return <Provider value={{ graph, loadGraph, isGraphLoaded, deleteGraph }}>{children}</Provider>\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport classNames from 'classnames'\r\n\r\nexport const size = 5\r\nexport const mdSize = size * 0.8\r\nexport const xsSize = size * 0.6\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  position: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n    width: theme.spacing(size),\r\n    height: theme.spacing(size),\r\n    marginLeft: theme.spacing(0.5),\r\n    marginRight: theme.spacing(0.5),\r\n    lineHeight: `${theme.spacing(size)}px`,\r\n    background: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n    [theme.breakpoints.down('md')]: {\r\n      width: theme.spacing(mdSize),\r\n      height: theme.spacing(mdSize),\r\n      lineHeight: `${theme.spacing(mdSize)}px`,\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: theme.spacing(xsSize),\r\n      height: theme.spacing(xsSize),\r\n      lineHeight: `${theme.spacing(xsSize)}px`,\r\n    },\r\n    '&:hover': {\r\n      boxShadow: theme.shadows[4],\r\n    },\r\n  },\r\n  disabled: {\r\n    background: theme.palette.grey[500],\r\n  },\r\n}))\r\n\r\ninterface INodeBoxProps {\r\n  name: string\r\n  disabled?: boolean\r\n}\r\n\r\nexport default function NodeBox({ name, disabled }: INodeBoxProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper\r\n      elevation={2}\r\n      classes={{\r\n        root: classNames(classes.position, {\r\n          [classes.disabled]: disabled,\r\n        }),\r\n      }}\r\n    >\r\n      {name}\r\n    </Paper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport NodeBox, { size, mdSize, xsSize } from './NodeBox'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n    paddingLeft: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  empty: {\r\n    fontWeight: 'bold',\r\n    verticalAlign: 'middle',\r\n    height: theme.spacing(size),\r\n    lineHeight: `${theme.spacing(size)}px`,\r\n    [theme.breakpoints.down('md')]: {\r\n      height: theme.spacing(mdSize),\r\n      lineHeight: `${theme.spacing(mdSize)}px`,\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: theme.spacing(xsSize),\r\n      lineHeight: `${theme.spacing(xsSize)}px`,\r\n    },\r\n  },\r\n  title: {\r\n    width: theme.spacing(16),\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  list: {\r\n    display: 'flex',\r\n  },\r\n}))\r\n\r\ninterface IListValue {\r\n  name: string\r\n  disabled?: boolean\r\n}\r\n\r\ninterface IListProps {\r\n  title: string\r\n  list: IListValue[]\r\n  emptyMessage?: string\r\n}\r\n\r\nexport default function List({ list, title, emptyMessage }: IListProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper elevation={5} classes={{ root: classes.root }}>\r\n      <Typography classes={{ root: classes.title }}>{title}</Typography>\r\n\r\n      {list.length === 0 ? (\r\n        <Typography color=\"primary\" classes={{ root: classes.empty }}>\r\n          {emptyMessage}\r\n        </Typography>\r\n      ) : null}\r\n\r\n      <div className={classes.list}>\r\n        {list.map(({ name, disabled }, i) => (\r\n          <NodeBox key={i} name={name} disabled={disabled} />\r\n        ))}\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport List from './List'\r\n\r\ninterface IVisitedProps {\r\n  distances: number[]\r\n}\r\n\r\nexport default function Distance({ distances }: IVisitedProps) {\r\n  return (\r\n    <List\r\n      title=\"Odległość\"\r\n      list={distances.map((dst, i) => ({\r\n        name: Number.isFinite(dst) ? dst.toString() : 'inf',\r\n      }))}\r\n    />\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nimport NodeBox from './NodeBox'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  spacer: {\r\n    width: theme.spacing(1),\r\n  },\r\n}))\r\n\r\ninterface IVariable {\r\n  name: string\r\n  value: string\r\n}\r\n\r\ninterface IVariablesProps {\r\n  variables: (IVariable | null)[]\r\n}\r\n\r\nexport default function Variables({ variables }: IVariablesProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {variables.map((variable) =>\r\n        variable !== null ? (\r\n          <Fragment key={variable.name}>\r\n            <p>{variable.name}: </p>\r\n\r\n            <NodeBox name={variable.value} />\r\n            <div className={classes.spacer} />\r\n          </Fragment>\r\n        ) : null\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport List from './List'\r\nimport Graph from '../../Graph'\r\n\r\ninterface IVisitedProps {\r\n  visited: boolean[]\r\n}\r\n\r\nexport default function Visited({ visited }: IVisitedProps) {\r\n  return (\r\n    <List\r\n      title=\"Odwiedzone\"\r\n      list={visited.map((vis, i) => ({\r\n        name: Graph.fromIndexToName(i),\r\n        disabled: !vis,\r\n      }))}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport List from './List'\r\n\r\ninterface IQueueProps {\r\n  queue: string[]\r\n}\r\n\r\nexport default function Queue({ queue }: IQueueProps) {\r\n  return (\r\n    <List\r\n      title=\"Kolejka\"\r\n      emptyMessage=\"Pusta\"\r\n      list={queue.map((name) => ({ name }))}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\r\n\r\nimport LastPageIcon from '@material-ui/icons/LastPage'\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\r\n\r\nimport Code from './Code'\r\nimport Matrix from './Matrix'\r\nimport { BFSAlgorythm } from './BFSAlgorythm'\r\nimport useBFSAlgorithm from './useBFSAlgorithm'\r\nimport { Queue, Visited, Distance, Variables } from './Lists'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  navigation: {\r\n    display: 'flex',\r\n    marginTop: theme.spacing(2),\r\n    justifyContent: 'space-between',\r\n  },\r\n  navigationIcon: {\r\n    marginRight: theme.spacing(1),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  main: {\r\n    flex: 1,\r\n  },\r\n  step: {\r\n    marginTop: 'auto',\r\n    userSelect: 'none',\r\n    fontWeight: 'bold',\r\n  },\r\n  middle: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n  },\r\n}))\r\n\r\nexport default function BFS() {\r\n  const classes = useStyles()\r\n  const {\r\n    step,\r\n    steps,\r\n    graph,\r\n    nextStep,\r\n    previusStep,\r\n    scrollToEnd,\r\n    currentStep,\r\n    correctLoaded,\r\n    scrollToBegining,\r\n  } = useBFSAlgorithm()\r\n\r\n  if (!correctLoaded) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className={classes.main}>\r\n        <Queue queue={currentStep.queue} />\r\n        <Visited visited={currentStep.visited} />\r\n        <Distance distances={currentStep.distances} />\r\n        <Variables\r\n          variables={[\r\n            currentStep.first.length !== 0\r\n              ? { name: 'Pierwszy', value: currentStep.first }\r\n              : null,\r\n            currentStep.neighbor.length !== 0\r\n              ? { name: 'Sąsiad', value: currentStep.neighbor }\r\n              : null,\r\n          ]}\r\n        />\r\n      </main>\r\n\r\n      <div className={classes.middle}>\r\n        <Code code={BFSAlgorythm.code} selectedLine={currentStep.line} />\r\n\r\n        <Matrix\r\n          graph={graph}\r\n          first={currentStep.firstIndex}\r\n          markFirst={currentStep.markFirstInMatrix}\r\n        />\r\n      </div>\r\n\r\n      <section className={classes.navigation}>\r\n        <div>\r\n          <IconButton\r\n            color=\"primary\"\r\n            disabled={step <= 0}\r\n            onClick={previusStep}\r\n            title=\"poprzedni krok\"\r\n            aria-label=\"poprzedni krok\"\r\n            classes={{ root: classes.navigationIcon }}\r\n          >\r\n            <ArrowBackIcon\r\n              fontSize=\"large\"\r\n              color={step <= 0 ? 'disabled' : 'primary'}\r\n            />\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            color=\"primary\"\r\n            disabled={step <= 0}\r\n            onClick={scrollToBegining}\r\n            title=\"Przewiń do początku\"\r\n            aria-label=\"Przewiń do początku\"\r\n            classes={{ root: classes.navigationIcon }}\r\n          >\r\n            <FirstPageIcon\r\n              fontSize=\"large\"\r\n              color={step <= 0 ? 'disabled' : 'primary'}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Typography classes={{ root: classes.step }}>\r\n          Krok: {step + 1} / {steps}\r\n        </Typography>\r\n\r\n        <div>\r\n          <IconButton\r\n            color=\"primary\"\r\n            title=\"Przewiń do końca\"\r\n            onClick={scrollToEnd}\r\n            aria-label=\"Przewiń do końca\"\r\n            classes={{ root: classes.navigationIcon }}\r\n            disabled={step >= steps - 1}\r\n          >\r\n            <LastPageIcon\r\n              fontSize=\"large\"\r\n              color={step >= steps - 1 ? 'disabled' : 'primary'}\r\n            />\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            color=\"primary\"\r\n            title=\"następny krok\"\r\n            onClick={nextStep}\r\n            aria-label=\"następny krok\"\r\n            classes={{ root: classes.navigationIcon }}\r\n            disabled={step >= steps - 1}\r\n          >\r\n            <ArrowForwardIcon\r\n              fontSize=\"large\"\r\n              color={step >= steps - 1 ? 'disabled' : 'primary'}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useContext, useCallback } from 'react'\r\n\r\nimport { BFSAlgorythm } from './BFSAlgorythm'\r\nimport { graphContext } from '../GraphContext'\r\nimport { IStep } from './BFSAlgorythm'\r\n\r\nexport default function useBFSAlgorithm() {\r\n  let [algotythm, setAlgorythm] = useState<BFSAlgorythm | null>(null)\r\n  let [step, setStep] = useState(0)\r\n  const { graph, isGraphLoaded } = useContext(graphContext)\r\n\r\n  if (algotythm === null) {\r\n    setAlgorythm((algotythm = new BFSAlgorythm(graph, 0)))\r\n  }\r\n\r\n  const nextStep = useCallback(() => {\r\n    setStep((step) =>\r\n      algotythm === null || step >= algotythm.steps.length ? step : step + 1\r\n    )\r\n  }, [algotythm])\r\n\r\n  const previusStep = useCallback(() => {\r\n    setStep((step) => (step <= 0 ? step : step - 1))\r\n  }, [])\r\n\r\n  const scrollToBegining = useCallback(() => {\r\n    setStep(0)\r\n  }, [])\r\n\r\n  const scrollToEnd = useCallback(() => {\r\n    setStep(algotythm !== null ? Math.max(algotythm.steps.length - 1, 0) : 0)\r\n  }, [algotythm])\r\n\r\n  const correctLoaded = isGraphLoaded && algotythm.steps.length !== 0\r\n\r\n  const currentStep = correctLoaded ? algotythm.steps[step] : IStep.Empty\r\n\r\n  const steps = algotythm.steps.length\r\n\r\n  return {\r\n    step,\r\n    steps,\r\n    graph,\r\n    nextStep,\r\n    previusStep,\r\n    scrollToEnd,\r\n    currentStep,\r\n    correctLoaded,\r\n    scrollToBegining,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  content: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  shortContent: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      textTransform: 'lowercase',\r\n    },\r\n  },\r\n}))\r\n\r\ninterface ITabLabelProps {\r\n  content: string\r\n  shortContent: string\r\n}\r\n\r\nexport default function TabLabel({ content, shortContent }: ITabLabelProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <span className={classes.content}>{content}</span>\r\n      <span className={classes.shortContent}>{shortContent}</span>\r\n    </>\r\n  )\r\n}\r\n","import React, { forwardRef } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  box: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    maxWidth: '100%',\r\n    flexDirection: 'column',\r\n  },\r\n})\r\n\r\ninterface TabPanelProps {\r\n  index: number\r\n  value: number\r\n  fullContent?: boolean\r\n  children?: React.ReactNode\r\n}\r\n\r\n/**\r\n * Displays TabPanel Content if value is equals index\r\n */\r\nconst TabPanel = forwardRef<HTMLDivElement, TabPanelProps>(\r\n  ({ children, value, index, fullContent = false }: TabPanelProps, ref) => {\r\n    const classess = useStyles()\r\n\r\n    const visable = value === index\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        role='tabpanel'\r\n        hidden={!visable}\r\n        className={visable ? classess.root : undefined}\r\n      >\r\n        {visable ? (\r\n          fullContent ? (\r\n            children\r\n          ) : (\r\n            <Box p={3} className={classess.box}>\r\n              {children}\r\n            </Box>\r\n          )\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default TabPanel\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n    width: 'fit-content',\r\n    margin: 'auto',\r\n    maxWidth: theme.breakpoints.values.sm,\r\n  },\r\n}))\r\n\r\nexport default function Topic() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper classes={{ root: classes.root }}>\r\n      <Typography variant='h4' gutterBottom>\r\n        Temat 6\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Korzystając z macierzy sąsiedztwa wierzchołków opracować i zaimplementować algorytm\r\n        obliczania odległości pomiędzy dowolnymi wierzchołkami w grafie spójnym skierowanym.\r\n      </Typography>\r\n    </Paper>\r\n  )\r\n}\r\n","export default function GraphToString(grapth: number[][], separator = ' ') {\r\n  return `[\\n${separator}[ ${grapth.map((sub) => sub.join(', ')).join(` ],\\n${separator}[ `)} ]\\n]`\r\n}\r\n","export interface IAvailableGraph {\r\n  name: string\r\n  graph: number[][]\r\n}\r\n\r\nconst buildInGraphs: IAvailableGraph[] = [\r\n  {\r\n    name: 'Klasyka gatunku graf z Wikipedii',\r\n    graph: [\r\n      [0, 1, 0, 0, 1, 0],\r\n      [0, 0, 1, 0, 1, 0],\r\n      [0, 0, 0, 1, 0, 0],\r\n      [0, 0, 0, 0, 1, 1],\r\n      [0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0],\r\n    ],\r\n  },\r\n  {\r\n    name: '3 wierzchołkowy wielokąt foremny',\r\n    graph: [\r\n      [0, 1, 1],\r\n      [1, 0, 1],\r\n      [1, 1, 0],\r\n    ],\r\n  },\r\n]\r\n\r\nconst userGraphs: IAvailableGraph[] = []\r\n\r\n;(() => {\r\n  const userGraphsLocalStorage = localStorage.getItem('userGraphs')\r\n\r\n  if (userGraphsLocalStorage !== null) {\r\n    try {\r\n      userGraphs.push(\r\n        ...(JSON.parse(userGraphsLocalStorage) as IAvailableGraph[])\r\n      )\r\n    } catch {}\r\n  }\r\n})()\r\n\r\nconst availableGraphs: IAvailableGraph[] = [...buildInGraphs, ...userGraphs]\r\n\r\nexport function addNewDefaultGraph(\r\n  graph: number[][],\r\n  name = `Twój graf ${new Date().toLocaleDateString(undefined, {\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n  })}`\r\n) {\r\n  const newGraph: IAvailableGraph = { name, graph }\r\n\r\n  userGraphs.push(newGraph)\r\n  availableGraphs.push(newGraph)\r\n\r\n  localStorage.setItem('userGraphs', JSON.stringify(userGraphs))\r\n}\r\n\r\nexport default availableGraphs\r\n","export default function CheckGraphMatrixStringReprezentation(text: string) {\r\n  if (text.length === 0) {\r\n    return 'Macierz musi zawierać min 1 wierzchołek'\r\n  }\r\n\r\n  try {\r\n    const obj: any = JSON.parse(text)\r\n\r\n    if (!Array.isArray(obj)) {\r\n      return 'JSON: Macierz musi być dwuwymiarową tablicą liczb (number[][])'\r\n    }\r\n\r\n    const length = obj.length\r\n\r\n    for (const sub of obj) {\r\n      if (!Array.isArray(sub)) {\r\n        return 'JSON: Macierz musi być dwuwymiarową tablicą liczb'\r\n      }\r\n\r\n      if (sub.length !== length) {\r\n        return 'JSON: Macierz musi być dwuwymiarową kwadratową tablicą liczb'\r\n      }\r\n\r\n      for (const nb of sub) {\r\n        const val = parseInt(nb)\r\n\r\n        if (Number.isNaN(val)) {\r\n          return 'JSON: Macierz musi być dwuwymiarową tablicą liczb'\r\n        }\r\n\r\n        if (val !== 0 && val !== 1) {\r\n          return 'Wartości macierzy mogą być tylko 0 lub 1'\r\n        }\r\n      }\r\n    }\r\n  } catch {\r\n    return 'Macierz w nieprawidłowym formacie'\r\n  }\r\n\r\n  return null\r\n}\r\n","import React, { useState, useCallback } from 'react'\r\n\r\nimport parseGraph from './parseGraph'\r\nimport GraphToString from './GraphToString'\r\nimport aviableGraphs, { addNewDefaultGraph } from './defaultGraphs'\r\nimport CheckGraphMatrixStringReprezentation from './CheckGraphMatrixStringReprezentation'\r\n\r\nexport default function useNewGraph(\r\n  addNewGraph: (graphAdjacencyMatrix: number[][]) => void\r\n) {\r\n  const [selectedDefaultGraph, setSelectedDefaultGraph] = useState(0)\r\n  const [text, setText] = useState(\r\n    GraphToString(aviableGraphs[selectedDefaultGraph].graph)\r\n  )\r\n  const [textError, setTextError] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const handleSelectChange = useCallback((event: React.ChangeEvent<{}>) => {\r\n    const id: number = (event.target as any).value\r\n\r\n    setSelectedDefaultGraph(id)\r\n    setText(GraphToString(aviableGraphs[id].graph))\r\n    setTextError(false)\r\n  }, [])\r\n\r\n  const useDefaultGraph = useCallback(() => {\r\n    addNewGraph(aviableGraphs[selectedDefaultGraph].graph)\r\n  }, [selectedDefaultGraph, addNewGraph])\r\n\r\n  const handleChange = useCallback(\r\n    ({ target }: React.ChangeEvent<{}>) => {\r\n      const content: string = (target as any).value\r\n\r\n      if (textError) {\r\n        const err = CheckGraphMatrixStringReprezentation(content)\r\n\r\n        if (err === null) {\r\n          setTextError(false)\r\n        }\r\n      }\r\n\r\n      setText(content)\r\n    },\r\n    [textError]\r\n  )\r\n\r\n  const handleBlur = useCallback(() => {\r\n    const err = CheckGraphMatrixStringReprezentation(text)\r\n\r\n    setTextError(err !== null)\r\n    setErrorMessage(err || '')\r\n  }, [text])\r\n\r\n  const handleUseButton = useCallback(() => {\r\n    if (textError || CheckGraphMatrixStringReprezentation(text) !== null) return\r\n\r\n    const newGraph = parseGraph(text)\r\n\r\n    addNewDefaultGraph(newGraph)\r\n    addNewGraph(newGraph)\r\n  }, [textError, text, addNewGraph])\r\n\r\n  return {\r\n    text,\r\n    textError,\r\n    handleBlur,\r\n    handleChange,\r\n    errorMessage,\r\n    handleUseButton,\r\n    useDefaultGraph,\r\n    handleSelectChange,\r\n    selectedDefaultGraph,\r\n  }\r\n}\r\n","export default function parseGraph(str: string) {\r\n  return (JSON.parse(str) as string[][]).map((sub) => sub.map((nb) => parseInt(nb)))\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nimport Topic from './Topic'\r\nimport useNewGraph from './useNewGraph'\r\nimport aviableGraphs from './defaultGraphs'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  section: {\r\n    maxWidth: theme.breakpoints.values.md,\r\n    margin: `${theme.spacing(4)}px auto`,\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 512,\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  select: {\r\n    '&:focus': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  buttonList: {\r\n    marginLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(5),\r\n    paddingLeft: theme.spacing(5),\r\n    marginTop: theme.spacing(1),\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginTop: theme.spacing(2),\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonText: {\r\n    marginTop: theme.spacing(4),\r\n    paddingRight: theme.spacing(5),\r\n    paddingLeft: theme.spacing(5),\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  textArea: {\r\n    minHeight: 200,\r\n  },\r\n}))\r\n\r\ninterface IPropsNewGraph {\r\n  addNewGraph: (graphAdjacencyMatrix: number[][]) => void\r\n}\r\n\r\nexport default function NewGraph({ addNewGraph }: IPropsNewGraph) {\r\n  const classes = useStyles()\r\n  const {\r\n    text,\r\n    handleBlur,\r\n    handleUseButton,\r\n    handleChange,\r\n    useDefaultGraph,\r\n    handleSelectChange,\r\n    errorMessage,\r\n    textError,\r\n    selectedDefaultGraph,\r\n  } = useNewGraph(addNewGraph)\r\n\r\n  return (\r\n    <div>\r\n      <Topic />\r\n\r\n      <section className={classes.section}>\r\n        <Typography variant=\"h6\">\r\n          1. Wybierz jeden z domyślnie dostępnych grafów\r\n        </Typography>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <Select\r\n            value={selectedDefaultGraph}\r\n            onChange={handleSelectChange}\r\n            classes={{ root: classes.select }}\r\n          >\r\n            {aviableGraphs.map(({ name }, id) => (\r\n              <MenuItem value={id} key={id}>\r\n                {name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          classes={{ root: classes.buttonList }}\r\n          onClick={useDefaultGraph}\r\n        >\r\n          Użyj\r\n        </Button>\r\n      </section>\r\n\r\n      <section className={classes.section}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          2. Wprowadź swój graf za pomocą macierzy sąsiedztwa\r\n        </Typography>\r\n\r\n        <Typography>Format dwuwymiarowa tablica JSON</Typography>\r\n\r\n        <TextField\r\n          multiline\r\n          error={textError}\r\n          variant=\"outlined\"\r\n          onBlur={handleBlur}\r\n          value={text}\r\n          onChange={handleChange}\r\n          placeholder=\"Macierz sąsiedztwa ...\"\r\n          classes={{ root: classes.textField }}\r\n          label={textError ? errorMessage : undefined}\r\n          inputProps={{ className: classes.textArea }}\r\n        />\r\n\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          disabled={textError}\r\n          onClick={handleUseButton}\r\n          classes={{ root: classes.buttonText }}\r\n        >\r\n          Użyj\r\n        </Button>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState, useContext, RefObject } from 'react'\r\nimport grey from '@material-ui/core/colors/grey'\r\nimport indigo from '@material-ui/core/colors/indigo'\r\nimport { Network, Options, Data } from 'vis'\r\n\r\nimport { graphContext } from '../GraphContext'\r\n\r\nconst options: Options = {\r\n  nodes: {\r\n    shape: 'dot',\r\n    size: 30,\r\n    font: {\r\n      size: 28,\r\n      color: grey[800],\r\n    },\r\n    color: indigo[700],\r\n    borderWidth: 2,\r\n  },\r\n  edges: {\r\n    width: 2,\r\n    arrows: {\r\n      to: true,\r\n    },\r\n    length: 1.2 * 256,\r\n  },\r\n  autoResize: true,\r\n  height: '100vw',\r\n  width: '100vh',\r\n  locale: 'pl',\r\n}\r\n\r\ninterface IGraphPresentationProps {\r\n  containerRef: RefObject<HTMLDivElement>\r\n}\r\n\r\nexport default function GraphPresentation({ containerRef }: IGraphPresentationProps) {\r\n  const [network, setNetwork] = useState<Network | null>(null)\r\n  const { isGraphLoaded, graph } = useContext(graphContext)\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current !== null && network === null && isGraphLoaded) {\r\n      const data: Data = {\r\n        nodes: graph.getNodes(),\r\n        edges: graph.getEdges(),\r\n      }\r\n\r\n      const width = `${containerRef.current.offsetWidth}px`\r\n      const height = `${containerRef.current.offsetHeight}px`\r\n\r\n      const newNetwork = new Network(containerRef.current, data, { ...options, width, height })\r\n\r\n      setNetwork(newNetwork)\r\n    }\r\n\r\n    return () => {\r\n      if (network !== null) {\r\n        network.destroy()\r\n        setNetwork(null)\r\n      }\r\n    }\r\n  }, [containerRef, isGraphLoaded, graph, network])\r\n\r\n  return <></>\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\n\r\nimport BFS from '../BFS'\r\nimport TabLabel from './TabLabel'\r\nimport TabPanel from './TabPanel'\r\nimport NewGraph from '../NewGraph'\r\nimport useNavigation from './useNavigation'\r\nimport GraphPresentation from '../GraphPresentation'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingRight: theme.spacing(5),\r\n      paddingLeft: theme.spacing(5),\r\n    },\r\n    maxWidth: 'max-content',\r\n  },\r\n}))\r\n\r\nexport default function Navigation() {\r\n  const classes = useStyles()\r\n  const networkTabPanelRef = useRef<HTMLDivElement>(null)\r\n  const { openTab, addNewGraph, handleChange, isGraphLoaded } = useNavigation()\r\n\r\n  return (\r\n    <>\r\n      <Paper color=\"default\" square>\r\n        <Tabs\r\n          centered\r\n          value={openTab}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n        >\r\n          <Tab\r\n            label={\r\n              <TabLabel\r\n                content=\"Wprowadzanie grafu\"\r\n                shortContent=\"Wprowadzanie\"\r\n              />\r\n            }\r\n            classes={{ root: classes.tab }}\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <TabLabel\r\n                content=\"Znajdowanie odległości\"\r\n                shortContent=\"Odległości\"\r\n              />\r\n            }\r\n            classes={{ root: classes.tab }}\r\n            disabled={!isGraphLoaded}\r\n          />\r\n\r\n          <Tab\r\n            label={\r\n              <TabLabel\r\n                content=\"Prezentacja grafu\"\r\n                shortContent=\"Prezentacja\"\r\n              />\r\n            }\r\n            classes={{ root: classes.tab }}\r\n            disabled={!isGraphLoaded}\r\n          />\r\n        </Tabs>\r\n      </Paper>\r\n\r\n      <TabPanel value={openTab} index={0}>\r\n        <NewGraph addNewGraph={addNewGraph} />\r\n      </TabPanel>\r\n\r\n      <TabPanel value={openTab} index={1}>\r\n        <BFS />\r\n      </TabPanel>\r\n\r\n      <TabPanel value={openTab} index={2} fullContent ref={networkTabPanelRef}>\r\n        <GraphPresentation containerRef={networkTabPanelRef} />\r\n      </TabPanel>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useContext, useCallback, ChangeEvent } from 'react'\r\n\r\nimport { graphContext } from '../GraphContext'\r\n\r\nexport default function useNavigation() {\r\n  const [openTab, setOpenTabId] = useState(0)\r\n  const { isGraphLoaded, loadGraph, deleteGraph } = useContext(graphContext)\r\n\r\n  const handleChange = useCallback(\r\n    (event: ChangeEvent<{}>, id: number) => {\r\n      if (id === 0) deleteGraph()\r\n\r\n      setOpenTabId(id)\r\n    },\r\n    [deleteGraph]\r\n  )\r\n\r\n  const addNewGraph = useCallback(\r\n    (graphAdjacencyMatrix: number[][]) => {\r\n      loadGraph(graphAdjacencyMatrix)\r\n      setOpenTabId(1)\r\n    },\r\n    [loadGraph]\r\n  )\r\n\r\n  return {\r\n    openTab,\r\n    addNewGraph,\r\n    handleChange,\r\n    isGraphLoaded,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\n\r\nimport Header from './Header'\r\nimport Navigation from './Navigation'\r\nimport { GraphContextProvider } from './GraphContext'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    maxWidth: '100vw',\r\n    minHeight: '100vh',\r\n    flexDirection: 'column',\r\n  },\r\n})\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <CssBaseline>\r\n      <GraphContextProvider>\r\n        <div className={classes.root}>\r\n          <Header />\r\n\r\n          <Navigation />\r\n        </div>\r\n      </GraphContextProvider>\r\n    </CssBaseline>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}